// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: Struct.proto

#include "Struct.pb.h"

#include <algorithm>

#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/extension_set.h>
#include <google/protobuf/wire_format_lite.h>
#include <google/protobuf/descriptor.h>
#include <google/protobuf/generated_message_reflection.h>
#include <google/protobuf/reflection_ops.h>
#include <google/protobuf/wire_format.h>
// @@protoc_insertion_point(includes)
#include <google/protobuf/port_def.inc>

PROTOBUF_PRAGMA_INIT_SEG
namespace Protocol {
constexpr ObjectInfo::ObjectInfo(
  ::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized)
  : name_(&::PROTOBUF_NAMESPACE_ID::internal::fixed_address_empty_string)
  , location_(nullptr)
  , rotator_(nullptr)
  , forwarddir_(nullptr)
  , roomid_(uint64_t{0u})
  , type_(0)

  , scale_(0)
  , metaid_(uint64_t{0u}){}
struct ObjectInfoDefaultTypeInternal {
  constexpr ObjectInfoDefaultTypeInternal()
    : _instance(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized{}) {}
  ~ObjectInfoDefaultTypeInternal() {}
  union {
    ObjectInfo _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT ObjectInfoDefaultTypeInternal _ObjectInfo_default_instance_;
constexpr PBVector::PBVector(
  ::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized)
  : x_(0)
  , y_(0)
  , z_(0){}
struct PBVectorDefaultTypeInternal {
  constexpr PBVectorDefaultTypeInternal()
    : _instance(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized{}) {}
  ~PBVectorDefaultTypeInternal() {}
  union {
    PBVector _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT PBVectorDefaultTypeInternal _PBVector_default_instance_;
constexpr PBCharacterData::PBCharacterData(
  ::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized)
  : skills_()
  , charmeta_(nullptr)
  , id_(uint64_t{0u})
  , level_(uint64_t{0u})
  , hp_(0)
  , mp_(0)
  , maxhp_(0)
  , maxmp_(0)
  , exp_(0)
  , maxexp_(0)
  , gold_(0){}
struct PBCharacterDataDefaultTypeInternal {
  constexpr PBCharacterDataDefaultTypeInternal()
    : _instance(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized{}) {}
  ~PBCharacterDataDefaultTypeInternal() {}
  union {
    PBCharacterData _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT PBCharacterDataDefaultTypeInternal _PBCharacterData_default_instance_;
constexpr PBItemData::PBItemData(
  ::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized)
  : consumdata_(nullptr)
  , equipdata_(nullptr)
  , count_(uint64_t{0u})
  , upgrade_(uint64_t{0u})
  , idx_(uint64_t{0u})
  , type_(0)
{}
struct PBItemDataDefaultTypeInternal {
  constexpr PBItemDataDefaultTypeInternal()
    : _instance(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized{}) {}
  ~PBItemDataDefaultTypeInternal() {}
  union {
    PBItemData _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT PBItemDataDefaultTypeInternal _PBItemData_default_instance_;
constexpr PBSkillData::PBSkillData(
  ::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized)
  : skillmeta_(nullptr)
  , id_(uint64_t{0u})
  , upgrade_(uint64_t{0u}){}
struct PBSkillDataDefaultTypeInternal {
  constexpr PBSkillDataDefaultTypeInternal()
    : _instance(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized{}) {}
  ~PBSkillDataDefaultTypeInternal() {}
  union {
    PBSkillData _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT PBSkillDataDefaultTypeInternal _PBSkillData_default_instance_;
constexpr CharacterMetaData::CharacterMetaData(
  ::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized)
  : skills_()
  , _skills_cached_byte_size_()
  , resource_(&::PROTOBUF_NAMESPACE_ID::internal::fixed_address_empty_string)
  , anim_(&::PROTOBUF_NAMESPACE_ID::internal::fixed_address_empty_string)
  , stat_(nullptr)
  , id_(uint64_t{0u})
  , type_(0)
{}
struct CharacterMetaDataDefaultTypeInternal {
  constexpr CharacterMetaDataDefaultTypeInternal()
    : _instance(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized{}) {}
  ~CharacterMetaDataDefaultTypeInternal() {}
  union {
    CharacterMetaData _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT CharacterMetaDataDefaultTypeInternal _CharacterMetaData_default_instance_;
constexpr SkillMetaData::SkillMetaData(
  ::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized)
  : name_(&::PROTOBUF_NAMESPACE_ID::internal::fixed_address_empty_string)
  , resource_(&::PROTOBUF_NAMESPACE_ID::internal::fixed_address_empty_string)
  , id_(uint64_t{0u})
  , damage_(uint64_t{0u})
  , mpconsumption_(uint64_t{0u})
  , cooldown_(0){}
struct SkillMetaDataDefaultTypeInternal {
  constexpr SkillMetaDataDefaultTypeInternal()
    : _instance(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized{}) {}
  ~SkillMetaDataDefaultTypeInternal() {}
  union {
    SkillMetaData _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT SkillMetaDataDefaultTypeInternal _SkillMetaData_default_instance_;
constexpr ProjectileInfo::ProjectileInfo(
  ::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized)
  : name_(&::PROTOBUF_NAMESPACE_ID::internal::fixed_address_empty_string)
  , sourcename_(&::PROTOBUF_NAMESPACE_ID::internal::fixed_address_empty_string)
  , speed_(0)
  , range_(0){}
struct ProjectileInfoDefaultTypeInternal {
  constexpr ProjectileInfoDefaultTypeInternal()
    : _instance(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized{}) {}
  ~ProjectileInfoDefaultTypeInternal() {}
  union {
    ProjectileInfo _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT ProjectileInfoDefaultTypeInternal _ProjectileInfo_default_instance_;
constexpr ConsumMetaData::ConsumMetaData(
  ::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized)
  : name_(&::PROTOBUF_NAMESPACE_ID::internal::fixed_address_empty_string)
  , resource_(&::PROTOBUF_NAMESPACE_ID::internal::fixed_address_empty_string)
  , desc_(&::PROTOBUF_NAMESPACE_ID::internal::fixed_address_empty_string)
  , id_(uint64_t{0u})
  , hp_(uint64_t{0u})
  , mp_(uint64_t{0u})
  , percentage_(uint64_t{0u})
  , price_(uint64_t{0u}){}
struct ConsumMetaDataDefaultTypeInternal {
  constexpr ConsumMetaDataDefaultTypeInternal()
    : _instance(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized{}) {}
  ~ConsumMetaDataDefaultTypeInternal() {}
  union {
    ConsumMetaData _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT ConsumMetaDataDefaultTypeInternal _ConsumMetaData_default_instance_;
constexpr EquipMetaData::EquipMetaData(
  ::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized)
  : name_(&::PROTOBUF_NAMESPACE_ID::internal::fixed_address_empty_string)
  , resource_(&::PROTOBUF_NAMESPACE_ID::internal::fixed_address_empty_string)
  , id_(uint64_t{0u})
  , attack_(uint64_t{0u})
  , defense_(uint64_t{0u})
  , percentage_(uint64_t{0u})
  , price_(uint64_t{0u})
  , equiptype_(0)
{}
struct EquipMetaDataDefaultTypeInternal {
  constexpr EquipMetaDataDefaultTypeInternal()
    : _instance(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized{}) {}
  ~EquipMetaDataDefaultTypeInternal() {}
  union {
    EquipMetaData _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT EquipMetaDataDefaultTypeInternal _EquipMetaData_default_instance_;
constexpr NPCMetaData::NPCMetaData(
  ::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized)
  : ids_()
  , _ids_cached_byte_size_()
  , name_(&::PROTOBUF_NAMESPACE_ID::internal::fixed_address_empty_string)
  , id_(uint64_t{0u}){}
struct NPCMetaDataDefaultTypeInternal {
  constexpr NPCMetaDataDefaultTypeInternal()
    : _instance(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized{}) {}
  ~NPCMetaDataDefaultTypeInternal() {}
  union {
    NPCMetaData _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT NPCMetaDataDefaultTypeInternal _NPCMetaData_default_instance_;
constexpr ProjectileMetaData::ProjectileMetaData(
  ::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized)
  : resource_(&::PROTOBUF_NAMESPACE_ID::internal::fixed_address_empty_string)
  , resourcematerial_(&::PROTOBUF_NAMESPACE_ID::internal::fixed_address_empty_string)
  , effect_(&::PROTOBUF_NAMESPACE_ID::internal::fixed_address_empty_string)
  , effectmesh_(&::PROTOBUF_NAMESPACE_ID::internal::fixed_address_empty_string)
  , effectmaterial_(&::PROTOBUF_NAMESPACE_ID::internal::fixed_address_empty_string)
  , explosioneffect_(&::PROTOBUF_NAMESPACE_ID::internal::fixed_address_empty_string)
  , effectlocation_(nullptr)
  , effectmeshlocation_(nullptr)
  , id_(uint64_t{0u})
  , damage_(uint64_t{0u})
  , speed_(uint64_t{0u})
  , size_(0)
  , scale_(0)
  , duration_(uint64_t{0u})
  , limitdistance_(uint64_t{0u})
  , childprojectileid_(uint64_t{0u})
  , effectscale_(0)
  , effectmeshscale_(0){}
struct ProjectileMetaDataDefaultTypeInternal {
  constexpr ProjectileMetaDataDefaultTypeInternal()
    : _instance(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized{}) {}
  ~ProjectileMetaDataDefaultTypeInternal() {}
  union {
    ProjectileMetaData _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT ProjectileMetaDataDefaultTypeInternal _ProjectileMetaData_default_instance_;
constexpr SummonsMetaData::SummonsMetaData(
  ::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized)
  : resource_(&::PROTOBUF_NAMESPACE_ID::internal::fixed_address_empty_string)
  , anim_(&::PROTOBUF_NAMESPACE_ID::internal::fixed_address_empty_string)
  , stat_(nullptr)
  , id_(uint64_t{0u})
  , skillid_(uint64_t{0u})
  , duration_(uint64_t{0u})
  , detectrange_(uint64_t{0u})
  , attrange_(uint64_t{0u}){}
struct SummonsMetaDataDefaultTypeInternal {
  constexpr SummonsMetaDataDefaultTypeInternal()
    : _instance(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized{}) {}
  ~SummonsMetaDataDefaultTypeInternal() {}
  union {
    SummonsMetaData _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT SummonsMetaDataDefaultTypeInternal _SummonsMetaData_default_instance_;
constexpr EnemyMetaData::EnemyMetaData(
  ::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized)
  : resource_(&::PROTOBUF_NAMESPACE_ID::internal::fixed_address_empty_string)
  , anim_(&::PROTOBUF_NAMESPACE_ID::internal::fixed_address_empty_string)
  , stat_(nullptr)
  , id_(uint64_t{0u})
  , skillid_(uint64_t{0u})
  , detectrange_(uint64_t{0u})
  , attrange_(uint64_t{0u}){}
struct EnemyMetaDataDefaultTypeInternal {
  constexpr EnemyMetaDataDefaultTypeInternal()
    : _instance(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized{}) {}
  ~EnemyMetaDataDefaultTypeInternal() {}
  union {
    EnemyMetaData _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT EnemyMetaDataDefaultTypeInternal _EnemyMetaData_default_instance_;
constexpr StatMetaData::StatMetaData(
  ::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized)
  : hp_(uint64_t{0u})
  , mp_(uint64_t{0u})
  , exp_(uint64_t{0u})
  , maxhp_(uint64_t{0u})
  , maxmp_(uint64_t{0u})
  , maxexp_(uint64_t{0u}){}
struct StatMetaDataDefaultTypeInternal {
  constexpr StatMetaDataDefaultTypeInternal()
    : _instance(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized{}) {}
  ~StatMetaDataDefaultTypeInternal() {}
  union {
    StatMetaData _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT StatMetaDataDefaultTypeInternal _StatMetaData_default_instance_;
}  // namespace Protocol
static ::PROTOBUF_NAMESPACE_ID::Metadata file_level_metadata_Struct_2eproto[15];
static constexpr ::PROTOBUF_NAMESPACE_ID::EnumDescriptor const** file_level_enum_descriptors_Struct_2eproto = nullptr;
static constexpr ::PROTOBUF_NAMESPACE_ID::ServiceDescriptor const** file_level_service_descriptors_Struct_2eproto = nullptr;

const ::PROTOBUF_NAMESPACE_ID::uint32 TableStruct_Struct_2eproto::offsets[] PROTOBUF_SECTION_VARIABLE(protodesc_cold) = {
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::Protocol::ObjectInfo, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::Protocol::ObjectInfo, roomid_),
  PROTOBUF_FIELD_OFFSET(::Protocol::ObjectInfo, type_),
  PROTOBUF_FIELD_OFFSET(::Protocol::ObjectInfo, location_),
  PROTOBUF_FIELD_OFFSET(::Protocol::ObjectInfo, rotator_),
  PROTOBUF_FIELD_OFFSET(::Protocol::ObjectInfo, forwarddir_),
  PROTOBUF_FIELD_OFFSET(::Protocol::ObjectInfo, scale_),
  PROTOBUF_FIELD_OFFSET(::Protocol::ObjectInfo, metaid_),
  PROTOBUF_FIELD_OFFSET(::Protocol::ObjectInfo, name_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::Protocol::PBVector, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::Protocol::PBVector, x_),
  PROTOBUF_FIELD_OFFSET(::Protocol::PBVector, y_),
  PROTOBUF_FIELD_OFFSET(::Protocol::PBVector, z_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::Protocol::PBCharacterData, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::Protocol::PBCharacterData, id_),
  PROTOBUF_FIELD_OFFSET(::Protocol::PBCharacterData, level_),
  PROTOBUF_FIELD_OFFSET(::Protocol::PBCharacterData, charmeta_),
  PROTOBUF_FIELD_OFFSET(::Protocol::PBCharacterData, skills_),
  PROTOBUF_FIELD_OFFSET(::Protocol::PBCharacterData, hp_),
  PROTOBUF_FIELD_OFFSET(::Protocol::PBCharacterData, mp_),
  PROTOBUF_FIELD_OFFSET(::Protocol::PBCharacterData, maxhp_),
  PROTOBUF_FIELD_OFFSET(::Protocol::PBCharacterData, maxmp_),
  PROTOBUF_FIELD_OFFSET(::Protocol::PBCharacterData, exp_),
  PROTOBUF_FIELD_OFFSET(::Protocol::PBCharacterData, maxexp_),
  PROTOBUF_FIELD_OFFSET(::Protocol::PBCharacterData, gold_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::Protocol::PBItemData, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::Protocol::PBItemData, type_),
  PROTOBUF_FIELD_OFFSET(::Protocol::PBItemData, consumdata_),
  PROTOBUF_FIELD_OFFSET(::Protocol::PBItemData, count_),
  PROTOBUF_FIELD_OFFSET(::Protocol::PBItemData, equipdata_),
  PROTOBUF_FIELD_OFFSET(::Protocol::PBItemData, upgrade_),
  PROTOBUF_FIELD_OFFSET(::Protocol::PBItemData, idx_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::Protocol::PBSkillData, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::Protocol::PBSkillData, id_),
  PROTOBUF_FIELD_OFFSET(::Protocol::PBSkillData, upgrade_),
  PROTOBUF_FIELD_OFFSET(::Protocol::PBSkillData, skillmeta_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::Protocol::CharacterMetaData, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::Protocol::CharacterMetaData, id_),
  PROTOBUF_FIELD_OFFSET(::Protocol::CharacterMetaData, resource_),
  PROTOBUF_FIELD_OFFSET(::Protocol::CharacterMetaData, anim_),
  PROTOBUF_FIELD_OFFSET(::Protocol::CharacterMetaData, type_),
  PROTOBUF_FIELD_OFFSET(::Protocol::CharacterMetaData, skills_),
  PROTOBUF_FIELD_OFFSET(::Protocol::CharacterMetaData, stat_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::Protocol::SkillMetaData, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::Protocol::SkillMetaData, id_),
  PROTOBUF_FIELD_OFFSET(::Protocol::SkillMetaData, name_),
  PROTOBUF_FIELD_OFFSET(::Protocol::SkillMetaData, cooldown_),
  PROTOBUF_FIELD_OFFSET(::Protocol::SkillMetaData, damage_),
  PROTOBUF_FIELD_OFFSET(::Protocol::SkillMetaData, mpconsumption_),
  PROTOBUF_FIELD_OFFSET(::Protocol::SkillMetaData, resource_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::Protocol::ProjectileInfo, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::Protocol::ProjectileInfo, name_),
  PROTOBUF_FIELD_OFFSET(::Protocol::ProjectileInfo, speed_),
  PROTOBUF_FIELD_OFFSET(::Protocol::ProjectileInfo, range_),
  PROTOBUF_FIELD_OFFSET(::Protocol::ProjectileInfo, sourcename_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::Protocol::ConsumMetaData, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::Protocol::ConsumMetaData, id_),
  PROTOBUF_FIELD_OFFSET(::Protocol::ConsumMetaData, name_),
  PROTOBUF_FIELD_OFFSET(::Protocol::ConsumMetaData, hp_),
  PROTOBUF_FIELD_OFFSET(::Protocol::ConsumMetaData, mp_),
  PROTOBUF_FIELD_OFFSET(::Protocol::ConsumMetaData, percentage_),
  PROTOBUF_FIELD_OFFSET(::Protocol::ConsumMetaData, price_),
  PROTOBUF_FIELD_OFFSET(::Protocol::ConsumMetaData, resource_),
  PROTOBUF_FIELD_OFFSET(::Protocol::ConsumMetaData, desc_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::Protocol::EquipMetaData, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::Protocol::EquipMetaData, id_),
  PROTOBUF_FIELD_OFFSET(::Protocol::EquipMetaData, name_),
  PROTOBUF_FIELD_OFFSET(::Protocol::EquipMetaData, attack_),
  PROTOBUF_FIELD_OFFSET(::Protocol::EquipMetaData, defense_),
  PROTOBUF_FIELD_OFFSET(::Protocol::EquipMetaData, equiptype_),
  PROTOBUF_FIELD_OFFSET(::Protocol::EquipMetaData, percentage_),
  PROTOBUF_FIELD_OFFSET(::Protocol::EquipMetaData, price_),
  PROTOBUF_FIELD_OFFSET(::Protocol::EquipMetaData, resource_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::Protocol::NPCMetaData, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::Protocol::NPCMetaData, id_),
  PROTOBUF_FIELD_OFFSET(::Protocol::NPCMetaData, name_),
  PROTOBUF_FIELD_OFFSET(::Protocol::NPCMetaData, ids_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::Protocol::ProjectileMetaData, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::Protocol::ProjectileMetaData, id_),
  PROTOBUF_FIELD_OFFSET(::Protocol::ProjectileMetaData, damage_),
  PROTOBUF_FIELD_OFFSET(::Protocol::ProjectileMetaData, speed_),
  PROTOBUF_FIELD_OFFSET(::Protocol::ProjectileMetaData, size_),
  PROTOBUF_FIELD_OFFSET(::Protocol::ProjectileMetaData, scale_),
  PROTOBUF_FIELD_OFFSET(::Protocol::ProjectileMetaData, duration_),
  PROTOBUF_FIELD_OFFSET(::Protocol::ProjectileMetaData, limitdistance_),
  PROTOBUF_FIELD_OFFSET(::Protocol::ProjectileMetaData, childprojectileid_),
  PROTOBUF_FIELD_OFFSET(::Protocol::ProjectileMetaData, resource_),
  PROTOBUF_FIELD_OFFSET(::Protocol::ProjectileMetaData, resourcematerial_),
  PROTOBUF_FIELD_OFFSET(::Protocol::ProjectileMetaData, effect_),
  PROTOBUF_FIELD_OFFSET(::Protocol::ProjectileMetaData, effectlocation_),
  PROTOBUF_FIELD_OFFSET(::Protocol::ProjectileMetaData, effectscale_),
  PROTOBUF_FIELD_OFFSET(::Protocol::ProjectileMetaData, effectmesh_),
  PROTOBUF_FIELD_OFFSET(::Protocol::ProjectileMetaData, effectmaterial_),
  PROTOBUF_FIELD_OFFSET(::Protocol::ProjectileMetaData, effectmeshlocation_),
  PROTOBUF_FIELD_OFFSET(::Protocol::ProjectileMetaData, effectmeshscale_),
  PROTOBUF_FIELD_OFFSET(::Protocol::ProjectileMetaData, explosioneffect_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::Protocol::SummonsMetaData, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::Protocol::SummonsMetaData, id_),
  PROTOBUF_FIELD_OFFSET(::Protocol::SummonsMetaData, skillid_),
  PROTOBUF_FIELD_OFFSET(::Protocol::SummonsMetaData, duration_),
  PROTOBUF_FIELD_OFFSET(::Protocol::SummonsMetaData, resource_),
  PROTOBUF_FIELD_OFFSET(::Protocol::SummonsMetaData, anim_),
  PROTOBUF_FIELD_OFFSET(::Protocol::SummonsMetaData, stat_),
  PROTOBUF_FIELD_OFFSET(::Protocol::SummonsMetaData, detectrange_),
  PROTOBUF_FIELD_OFFSET(::Protocol::SummonsMetaData, attrange_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::Protocol::EnemyMetaData, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::Protocol::EnemyMetaData, id_),
  PROTOBUF_FIELD_OFFSET(::Protocol::EnemyMetaData, skillid_),
  PROTOBUF_FIELD_OFFSET(::Protocol::EnemyMetaData, resource_),
  PROTOBUF_FIELD_OFFSET(::Protocol::EnemyMetaData, anim_),
  PROTOBUF_FIELD_OFFSET(::Protocol::EnemyMetaData, stat_),
  PROTOBUF_FIELD_OFFSET(::Protocol::EnemyMetaData, detectrange_),
  PROTOBUF_FIELD_OFFSET(::Protocol::EnemyMetaData, attrange_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::Protocol::StatMetaData, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::Protocol::StatMetaData, hp_),
  PROTOBUF_FIELD_OFFSET(::Protocol::StatMetaData, mp_),
  PROTOBUF_FIELD_OFFSET(::Protocol::StatMetaData, exp_),
  PROTOBUF_FIELD_OFFSET(::Protocol::StatMetaData, maxhp_),
  PROTOBUF_FIELD_OFFSET(::Protocol::StatMetaData, maxmp_),
  PROTOBUF_FIELD_OFFSET(::Protocol::StatMetaData, maxexp_),
};
static const ::PROTOBUF_NAMESPACE_ID::internal::MigrationSchema schemas[] PROTOBUF_SECTION_VARIABLE(protodesc_cold) = {
  { 0, -1, sizeof(::Protocol::ObjectInfo)},
  { 13, -1, sizeof(::Protocol::PBVector)},
  { 21, -1, sizeof(::Protocol::PBCharacterData)},
  { 37, -1, sizeof(::Protocol::PBItemData)},
  { 48, -1, sizeof(::Protocol::PBSkillData)},
  { 56, -1, sizeof(::Protocol::CharacterMetaData)},
  { 67, -1, sizeof(::Protocol::SkillMetaData)},
  { 78, -1, sizeof(::Protocol::ProjectileInfo)},
  { 87, -1, sizeof(::Protocol::ConsumMetaData)},
  { 100, -1, sizeof(::Protocol::EquipMetaData)},
  { 113, -1, sizeof(::Protocol::NPCMetaData)},
  { 121, -1, sizeof(::Protocol::ProjectileMetaData)},
  { 144, -1, sizeof(::Protocol::SummonsMetaData)},
  { 157, -1, sizeof(::Protocol::EnemyMetaData)},
  { 169, -1, sizeof(::Protocol::StatMetaData)},
};

static ::PROTOBUF_NAMESPACE_ID::Message const * const file_default_instances[] = {
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::Protocol::_ObjectInfo_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::Protocol::_PBVector_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::Protocol::_PBCharacterData_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::Protocol::_PBItemData_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::Protocol::_PBSkillData_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::Protocol::_CharacterMetaData_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::Protocol::_SkillMetaData_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::Protocol::_ProjectileInfo_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::Protocol::_ConsumMetaData_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::Protocol::_EquipMetaData_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::Protocol::_NPCMetaData_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::Protocol::_ProjectileMetaData_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::Protocol::_SummonsMetaData_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::Protocol::_EnemyMetaData_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::Protocol::_StatMetaData_default_instance_),
};

const char descriptor_table_protodef_Struct_2eproto[] PROTOBUF_SECTION_VARIABLE(protodesc_cold) =
  "\n\014Struct.proto\022\010Protocol\032\nEnum.proto\"\340\001\n"
  "\nObjectInfo\022\016\n\006roomId\030\001 \001(\004\022\"\n\004type\030\002 \001("
  "\0162\024.Protocol.ObjectType\022$\n\010location\030\003 \001("
  "\0132\022.Protocol.PBVector\022#\n\007rotator\030\004 \001(\0132\022"
  ".Protocol.PBVector\022&\n\nforwardDir\030\005 \001(\0132\022"
  ".Protocol.PBVector\022\r\n\005scale\030\006 \001(\002\022\016\n\006met"
  "aId\030\007 \001(\004\022\014\n\004name\030\010 \001(\t\"+\n\010PBVector\022\t\n\001x"
  "\030\001 \001(\002\022\t\n\001y\030\002 \001(\002\022\t\n\001z\030\003 \001(\002\"\343\001\n\017PBChara"
  "cterData\022\n\n\002id\030\001 \001(\004\022\r\n\005level\030\002 \001(\004\022-\n\010c"
  "harMeta\030\003 \001(\0132\033.Protocol.CharacterMetaDa"
  "ta\022%\n\006skills\030\004 \003(\0132\025.Protocol.PBSkillDat"
  "a\022\n\n\002hp\030\005 \001(\002\022\n\n\002mp\030\006 \001(\002\022\r\n\005maxhp\030\007 \001(\002"
  "\022\r\n\005maxmp\030\010 \001(\002\022\013\n\003exp\030\t \001(\002\022\016\n\006maxexp\030\n"
  " \001(\002\022\014\n\004gold\030\013 \001(\002\"\265\001\n\nPBItemData\022 \n\004typ"
  "e\030\001 \001(\0162\022.Protocol.DataType\022,\n\nconsumDat"
  "a\030\002 \001(\0132\030.Protocol.ConsumMetaData\022\r\n\005cou"
  "nt\030\003 \001(\004\022*\n\tequipData\030\004 \001(\0132\027.Protocol.E"
  "quipMetaData\022\017\n\007upgrade\030\005 \001(\004\022\013\n\003idx\030\006 \001"
  "(\004\"V\n\013PBSkillData\022\n\n\002id\030\001 \001(\004\022\017\n\007upgrade"
  "\030\002 \001(\004\022*\n\tskillMeta\030\003 \001(\0132\027.Protocol.Ski"
  "llMetaData\"\231\001\n\021CharacterMetaData\022\n\n\002id\030\001"
  " \001(\004\022\020\n\010resource\030\002 \001(\t\022\014\n\004anim\030\003 \001(\t\022\"\n\004"
  "type\030\004 \001(\0162\024.Protocol.PlayerType\022\016\n\006skil"
  "ls\030\005 \003(\004\022$\n\004stat\030\006 \001(\0132\026.Protocol.StatMe"
  "taData\"t\n\rSkillMetaData\022\n\n\002id\030\001 \001(\004\022\014\n\004n"
  "ame\030\002 \001(\t\022\020\n\010cooldown\030\003 \001(\002\022\016\n\006damage\030\004 "
  "\001(\004\022\025\n\rmpconsumption\030\005 \001(\004\022\020\n\010resource\030\006"
  " \001(\t\"P\n\016ProjectileInfo\022\014\n\004name\030\001 \001(\t\022\r\n\005"
  "speed\030\002 \001(\002\022\r\n\005range\030\003 \001(\002\022\022\n\nsourceName"
  "\030\004 \001(\t\"\205\001\n\016ConsumMetaData\022\n\n\002id\030\001 \001(\004\022\014\n"
  "\004name\030\002 \001(\t\022\n\n\002hp\030\003 \001(\004\022\n\n\002mp\030\004 \001(\004\022\022\n\np"
  "ercentage\030\005 \001(\004\022\r\n\005price\030\006 \001(\004\022\020\n\010resour"
  "ce\030\007 \001(\t\022\014\n\004desc\030\010 \001(\t\"\247\001\n\rEquipMetaData"
  "\022\n\n\002id\030\001 \001(\004\022\014\n\004name\030\002 \001(\t\022\016\n\006attack\030\003 \001"
  "(\004\022\017\n\007defense\030\004 \001(\004\022&\n\tequiptype\030\005 \001(\0162\023"
  ".Protocol.EquipType\022\022\n\npercentage\030\006 \001(\004\022"
  "\r\n\005price\030\007 \001(\004\022\020\n\010resource\030\010 \001(\t\"4\n\013NPCM"
  "etaData\022\n\n\002id\030\001 \001(\004\022\014\n\004name\030\002 \001(\t\022\013\n\003ids"
  "\030\003 \003(\004\"\253\003\n\022ProjectileMetaData\022\n\n\002id\030\001 \001("
  "\004\022\016\n\006damage\030\002 \001(\004\022\r\n\005speed\030\003 \001(\004\022\014\n\004size"
  "\030\004 \001(\002\022\r\n\005scale\030\005 \001(\002\022\020\n\010duration\030\006 \001(\004\022"
  "\025\n\rlimitDistance\030\007 \001(\004\022\031\n\021childProjectil"
  "eId\030\010 \001(\004\022\020\n\010resource\030\t \001(\t\022\030\n\020resourceM"
  "aterial\030\n \001(\t\022\016\n\006effect\030\013 \001(\t\022*\n\016effectL"
  "ocation\030\014 \001(\0132\022.Protocol.PBVector\022\023\n\013eff"
  "ectScale\030\r \001(\002\022\022\n\neffectMesh\030\016 \001(\t\022\026\n\016ef"
  "fectMaterial\030\017 \001(\t\022.\n\022effectMeshLocation"
  "\030\020 \001(\0132\022.Protocol.PBVector\022\027\n\017effectMesh"
  "Scale\030\021 \001(\002\022\027\n\017explosionEffect\030\022 \001(\t\"\255\001\n"
  "\017SummonsMetaData\022\n\n\002id\030\001 \001(\004\022\017\n\007skillId\030"
  "\002 \001(\004\022\020\n\010duration\030\003 \001(\004\022\020\n\010resource\030\004 \001("
  "\t\022\014\n\004anim\030\005 \001(\t\022$\n\004stat\030\006 \001(\0132\026.Protocol"
  ".StatMetaData\022\023\n\013detectrange\030\007 \001(\004\022\020\n\010at"
  "trange\030\010 \001(\004\"\231\001\n\rEnemyMetaData\022\n\n\002id\030\001 \001"
  "(\004\022\017\n\007skillId\030\002 \001(\004\022\020\n\010resource\030\003 \001(\t\022\014\n"
  "\004anim\030\004 \001(\t\022$\n\004stat\030\005 \001(\0132\026.Protocol.Sta"
  "tMetaData\022\023\n\013detectrange\030\007 \001(\004\022\020\n\010attran"
  "ge\030\010 \001(\004\"a\n\014StatMetaData\022\n\n\002hp\030\001 \001(\004\022\n\n\002"
  "mp\030\002 \001(\004\022\013\n\003exp\030\003 \001(\004\022\r\n\005maxhp\030\004 \001(\004\022\r\n\005"
  "maxmp\030\005 \001(\004\022\016\n\006maxexp\030\006 \001(\004b\006proto3"
  ;
static const ::PROTOBUF_NAMESPACE_ID::internal::DescriptorTable*const descriptor_table_Struct_2eproto_deps[1] = {
  &::descriptor_table_Enum_2eproto,
};
static ::PROTOBUF_NAMESPACE_ID::internal::once_flag descriptor_table_Struct_2eproto_once;
const ::PROTOBUF_NAMESPACE_ID::internal::DescriptorTable descriptor_table_Struct_2eproto = {
  false, false, 2395, descriptor_table_protodef_Struct_2eproto, "Struct.proto", 
  &descriptor_table_Struct_2eproto_once, descriptor_table_Struct_2eproto_deps, 1, 15,
  schemas, file_default_instances, TableStruct_Struct_2eproto::offsets,
  file_level_metadata_Struct_2eproto, file_level_enum_descriptors_Struct_2eproto, file_level_service_descriptors_Struct_2eproto,
};
PROTOBUF_ATTRIBUTE_WEAK const ::PROTOBUF_NAMESPACE_ID::internal::DescriptorTable* descriptor_table_Struct_2eproto_getter() {
  return &descriptor_table_Struct_2eproto;
}

// Force running AddDescriptors() at dynamic initialization time.
PROTOBUF_ATTRIBUTE_INIT_PRIORITY static ::PROTOBUF_NAMESPACE_ID::internal::AddDescriptorsRunner dynamic_init_dummy_Struct_2eproto(&descriptor_table_Struct_2eproto);
namespace Protocol {

// ===================================================================

class ObjectInfo::_Internal {
 public:
  static const ::Protocol::PBVector& location(const ObjectInfo* msg);
  static const ::Protocol::PBVector& rotator(const ObjectInfo* msg);
  static const ::Protocol::PBVector& forwarddir(const ObjectInfo* msg);
};

const ::Protocol::PBVector&
ObjectInfo::_Internal::location(const ObjectInfo* msg) {
  return *msg->location_;
}
const ::Protocol::PBVector&
ObjectInfo::_Internal::rotator(const ObjectInfo* msg) {
  return *msg->rotator_;
}
const ::Protocol::PBVector&
ObjectInfo::_Internal::forwarddir(const ObjectInfo* msg) {
  return *msg->forwarddir_;
}
ObjectInfo::ObjectInfo(::PROTOBUF_NAMESPACE_ID::Arena* arena)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena) {
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:Protocol.ObjectInfo)
}
ObjectInfo::ObjectInfo(const ObjectInfo& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  name_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (!from._internal_name().empty()) {
    name_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, from._internal_name(), 
      GetArenaForAllocation());
  }
  if (from._internal_has_location()) {
    location_ = new ::Protocol::PBVector(*from.location_);
  } else {
    location_ = nullptr;
  }
  if (from._internal_has_rotator()) {
    rotator_ = new ::Protocol::PBVector(*from.rotator_);
  } else {
    rotator_ = nullptr;
  }
  if (from._internal_has_forwarddir()) {
    forwarddir_ = new ::Protocol::PBVector(*from.forwarddir_);
  } else {
    forwarddir_ = nullptr;
  }
  ::memcpy(&roomid_, &from.roomid_,
    static_cast<size_t>(reinterpret_cast<char*>(&metaid_) -
    reinterpret_cast<char*>(&roomid_)) + sizeof(metaid_));
  // @@protoc_insertion_point(copy_constructor:Protocol.ObjectInfo)
}

void ObjectInfo::SharedCtor() {
name_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
::memset(reinterpret_cast<char*>(this) + static_cast<size_t>(
    reinterpret_cast<char*>(&location_) - reinterpret_cast<char*>(this)),
    0, static_cast<size_t>(reinterpret_cast<char*>(&metaid_) -
    reinterpret_cast<char*>(&location_)) + sizeof(metaid_));
}

ObjectInfo::~ObjectInfo() {
  // @@protoc_insertion_point(destructor:Protocol.ObjectInfo)
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

void ObjectInfo::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
  name_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (this != internal_default_instance()) delete location_;
  if (this != internal_default_instance()) delete rotator_;
  if (this != internal_default_instance()) delete forwarddir_;
}

void ObjectInfo::ArenaDtor(void* object) {
  ObjectInfo* _this = reinterpret_cast< ObjectInfo* >(object);
  (void)_this;
}
void ObjectInfo::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void ObjectInfo::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}

void ObjectInfo::Clear() {
// @@protoc_insertion_point(message_clear_start:Protocol.ObjectInfo)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  name_.ClearToEmpty();
  if (GetArenaForAllocation() == nullptr && location_ != nullptr) {
    delete location_;
  }
  location_ = nullptr;
  if (GetArenaForAllocation() == nullptr && rotator_ != nullptr) {
    delete rotator_;
  }
  rotator_ = nullptr;
  if (GetArenaForAllocation() == nullptr && forwarddir_ != nullptr) {
    delete forwarddir_;
  }
  forwarddir_ = nullptr;
  ::memset(&roomid_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&metaid_) -
      reinterpret_cast<char*>(&roomid_)) + sizeof(metaid_));
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* ObjectInfo::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // uint64 roomId = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 8)) {
          roomid_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // .Protocol.ObjectType type = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 16)) {
          ::PROTOBUF_NAMESPACE_ID::uint64 val = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
          _internal_set_type(static_cast<::Protocol::ObjectType>(val));
        } else goto handle_unusual;
        continue;
      // .Protocol.PBVector location = 3;
      case 3:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 26)) {
          ptr = ctx->ParseMessage(_internal_mutable_location(), ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // .Protocol.PBVector rotator = 4;
      case 4:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 34)) {
          ptr = ctx->ParseMessage(_internal_mutable_rotator(), ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // .Protocol.PBVector forwardDir = 5;
      case 5:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 42)) {
          ptr = ctx->ParseMessage(_internal_mutable_forwarddir(), ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // float scale = 6;
      case 6:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 53)) {
          scale_ = ::PROTOBUF_NAMESPACE_ID::internal::UnalignedLoad<float>(ptr);
          ptr += sizeof(float);
        } else goto handle_unusual;
        continue;
      // uint64 metaId = 7;
      case 7:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 56)) {
          metaid_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // string name = 8;
      case 8:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 66)) {
          auto str = _internal_mutable_name();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "Protocol.ObjectInfo.name"));
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag == 0) || ((tag & 7) == 4)) {
          CHK_(ptr);
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag,
            _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
            ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* ObjectInfo::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:Protocol.ObjectInfo)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // uint64 roomId = 1;
  if (this->roomid() != 0) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteUInt64ToArray(1, this->_internal_roomid(), target);
  }

  // .Protocol.ObjectType type = 2;
  if (this->type() != 0) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteEnumToArray(
      2, this->_internal_type(), target);
  }

  // .Protocol.PBVector location = 3;
  if (this->has_location()) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(
        3, _Internal::location(this), target, stream);
  }

  // .Protocol.PBVector rotator = 4;
  if (this->has_rotator()) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(
        4, _Internal::rotator(this), target, stream);
  }

  // .Protocol.PBVector forwardDir = 5;
  if (this->has_forwarddir()) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(
        5, _Internal::forwarddir(this), target, stream);
  }

  // float scale = 6;
  if (!(this->scale() <= 0 && this->scale() >= 0)) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteFloatToArray(6, this->_internal_scale(), target);
  }

  // uint64 metaId = 7;
  if (this->metaid() != 0) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteUInt64ToArray(7, this->_internal_metaid(), target);
  }

  // string name = 8;
  if (!this->name().empty()) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_name().data(), static_cast<int>(this->_internal_name().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "Protocol.ObjectInfo.name");
    target = stream->WriteStringMaybeAliased(
        8, this->_internal_name(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:Protocol.ObjectInfo)
  return target;
}

size_t ObjectInfo::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:Protocol.ObjectInfo)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // string name = 8;
  if (!this->name().empty()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_name());
  }

  // .Protocol.PBVector location = 3;
  if (this->has_location()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
        *location_);
  }

  // .Protocol.PBVector rotator = 4;
  if (this->has_rotator()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
        *rotator_);
  }

  // .Protocol.PBVector forwardDir = 5;
  if (this->has_forwarddir()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
        *forwarddir_);
  }

  // uint64 roomId = 1;
  if (this->roomid() != 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::UInt64Size(
        this->_internal_roomid());
  }

  // .Protocol.ObjectType type = 2;
  if (this->type() != 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::EnumSize(this->_internal_type());
  }

  // float scale = 6;
  if (!(this->scale() <= 0 && this->scale() >= 0)) {
    total_size += 1 + 4;
  }

  // uint64 metaId = 7;
  if (this->metaid() != 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::UInt64Size(
        this->_internal_metaid());
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void ObjectInfo::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:Protocol.ObjectInfo)
  GOOGLE_DCHECK_NE(&from, this);
  const ObjectInfo* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<ObjectInfo>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:Protocol.ObjectInfo)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:Protocol.ObjectInfo)
    MergeFrom(*source);
  }
}

void ObjectInfo::MergeFrom(const ObjectInfo& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:Protocol.ObjectInfo)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (!from.name().empty()) {
    _internal_set_name(from._internal_name());
  }
  if (from.has_location()) {
    _internal_mutable_location()->::Protocol::PBVector::MergeFrom(from._internal_location());
  }
  if (from.has_rotator()) {
    _internal_mutable_rotator()->::Protocol::PBVector::MergeFrom(from._internal_rotator());
  }
  if (from.has_forwarddir()) {
    _internal_mutable_forwarddir()->::Protocol::PBVector::MergeFrom(from._internal_forwarddir());
  }
  if (from.roomid() != 0) {
    _internal_set_roomid(from._internal_roomid());
  }
  if (from.type() != 0) {
    _internal_set_type(from._internal_type());
  }
  if (!(from.scale() <= 0 && from.scale() >= 0)) {
    _internal_set_scale(from._internal_scale());
  }
  if (from.metaid() != 0) {
    _internal_set_metaid(from._internal_metaid());
  }
}

void ObjectInfo::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:Protocol.ObjectInfo)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void ObjectInfo::CopyFrom(const ObjectInfo& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:Protocol.ObjectInfo)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool ObjectInfo::IsInitialized() const {
  return true;
}

void ObjectInfo::InternalSwap(ObjectInfo* other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::InternalSwap(
      &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(),
      &name_, GetArenaForAllocation(),
      &other->name_, other->GetArenaForAllocation()
  );
  ::PROTOBUF_NAMESPACE_ID::internal::memswap<
      PROTOBUF_FIELD_OFFSET(ObjectInfo, metaid_)
      + sizeof(ObjectInfo::metaid_)
      - PROTOBUF_FIELD_OFFSET(ObjectInfo, location_)>(
          reinterpret_cast<char*>(&location_),
          reinterpret_cast<char*>(&other->location_));
}

::PROTOBUF_NAMESPACE_ID::Metadata ObjectInfo::GetMetadata() const {
  return ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(
      &descriptor_table_Struct_2eproto_getter, &descriptor_table_Struct_2eproto_once,
      file_level_metadata_Struct_2eproto[0]);
}

// ===================================================================

class PBVector::_Internal {
 public:
};

PBVector::PBVector(::PROTOBUF_NAMESPACE_ID::Arena* arena)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena) {
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:Protocol.PBVector)
}
PBVector::PBVector(const PBVector& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::memcpy(&x_, &from.x_,
    static_cast<size_t>(reinterpret_cast<char*>(&z_) -
    reinterpret_cast<char*>(&x_)) + sizeof(z_));
  // @@protoc_insertion_point(copy_constructor:Protocol.PBVector)
}

void PBVector::SharedCtor() {
::memset(reinterpret_cast<char*>(this) + static_cast<size_t>(
    reinterpret_cast<char*>(&x_) - reinterpret_cast<char*>(this)),
    0, static_cast<size_t>(reinterpret_cast<char*>(&z_) -
    reinterpret_cast<char*>(&x_)) + sizeof(z_));
}

PBVector::~PBVector() {
  // @@protoc_insertion_point(destructor:Protocol.PBVector)
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

void PBVector::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
}

void PBVector::ArenaDtor(void* object) {
  PBVector* _this = reinterpret_cast< PBVector* >(object);
  (void)_this;
}
void PBVector::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void PBVector::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}

void PBVector::Clear() {
// @@protoc_insertion_point(message_clear_start:Protocol.PBVector)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  ::memset(&x_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&z_) -
      reinterpret_cast<char*>(&x_)) + sizeof(z_));
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* PBVector::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // float x = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 13)) {
          x_ = ::PROTOBUF_NAMESPACE_ID::internal::UnalignedLoad<float>(ptr);
          ptr += sizeof(float);
        } else goto handle_unusual;
        continue;
      // float y = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 21)) {
          y_ = ::PROTOBUF_NAMESPACE_ID::internal::UnalignedLoad<float>(ptr);
          ptr += sizeof(float);
        } else goto handle_unusual;
        continue;
      // float z = 3;
      case 3:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 29)) {
          z_ = ::PROTOBUF_NAMESPACE_ID::internal::UnalignedLoad<float>(ptr);
          ptr += sizeof(float);
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag == 0) || ((tag & 7) == 4)) {
          CHK_(ptr);
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag,
            _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
            ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* PBVector::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:Protocol.PBVector)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // float x = 1;
  if (!(this->x() <= 0 && this->x() >= 0)) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteFloatToArray(1, this->_internal_x(), target);
  }

  // float y = 2;
  if (!(this->y() <= 0 && this->y() >= 0)) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteFloatToArray(2, this->_internal_y(), target);
  }

  // float z = 3;
  if (!(this->z() <= 0 && this->z() >= 0)) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteFloatToArray(3, this->_internal_z(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:Protocol.PBVector)
  return target;
}

size_t PBVector::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:Protocol.PBVector)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // float x = 1;
  if (!(this->x() <= 0 && this->x() >= 0)) {
    total_size += 1 + 4;
  }

  // float y = 2;
  if (!(this->y() <= 0 && this->y() >= 0)) {
    total_size += 1 + 4;
  }

  // float z = 3;
  if (!(this->z() <= 0 && this->z() >= 0)) {
    total_size += 1 + 4;
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void PBVector::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:Protocol.PBVector)
  GOOGLE_DCHECK_NE(&from, this);
  const PBVector* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<PBVector>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:Protocol.PBVector)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:Protocol.PBVector)
    MergeFrom(*source);
  }
}

void PBVector::MergeFrom(const PBVector& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:Protocol.PBVector)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (!(from.x() <= 0 && from.x() >= 0)) {
    _internal_set_x(from._internal_x());
  }
  if (!(from.y() <= 0 && from.y() >= 0)) {
    _internal_set_y(from._internal_y());
  }
  if (!(from.z() <= 0 && from.z() >= 0)) {
    _internal_set_z(from._internal_z());
  }
}

void PBVector::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:Protocol.PBVector)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void PBVector::CopyFrom(const PBVector& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:Protocol.PBVector)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool PBVector::IsInitialized() const {
  return true;
}

void PBVector::InternalSwap(PBVector* other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::internal::memswap<
      PROTOBUF_FIELD_OFFSET(PBVector, z_)
      + sizeof(PBVector::z_)
      - PROTOBUF_FIELD_OFFSET(PBVector, x_)>(
          reinterpret_cast<char*>(&x_),
          reinterpret_cast<char*>(&other->x_));
}

::PROTOBUF_NAMESPACE_ID::Metadata PBVector::GetMetadata() const {
  return ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(
      &descriptor_table_Struct_2eproto_getter, &descriptor_table_Struct_2eproto_once,
      file_level_metadata_Struct_2eproto[1]);
}

// ===================================================================

class PBCharacterData::_Internal {
 public:
  static const ::Protocol::CharacterMetaData& charmeta(const PBCharacterData* msg);
};

const ::Protocol::CharacterMetaData&
PBCharacterData::_Internal::charmeta(const PBCharacterData* msg) {
  return *msg->charmeta_;
}
PBCharacterData::PBCharacterData(::PROTOBUF_NAMESPACE_ID::Arena* arena)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena),
  skills_(arena) {
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:Protocol.PBCharacterData)
}
PBCharacterData::PBCharacterData(const PBCharacterData& from)
  : ::PROTOBUF_NAMESPACE_ID::Message(),
      skills_(from.skills_) {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  if (from._internal_has_charmeta()) {
    charmeta_ = new ::Protocol::CharacterMetaData(*from.charmeta_);
  } else {
    charmeta_ = nullptr;
  }
  ::memcpy(&id_, &from.id_,
    static_cast<size_t>(reinterpret_cast<char*>(&gold_) -
    reinterpret_cast<char*>(&id_)) + sizeof(gold_));
  // @@protoc_insertion_point(copy_constructor:Protocol.PBCharacterData)
}

void PBCharacterData::SharedCtor() {
::memset(reinterpret_cast<char*>(this) + static_cast<size_t>(
    reinterpret_cast<char*>(&charmeta_) - reinterpret_cast<char*>(this)),
    0, static_cast<size_t>(reinterpret_cast<char*>(&gold_) -
    reinterpret_cast<char*>(&charmeta_)) + sizeof(gold_));
}

PBCharacterData::~PBCharacterData() {
  // @@protoc_insertion_point(destructor:Protocol.PBCharacterData)
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

void PBCharacterData::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
  if (this != internal_default_instance()) delete charmeta_;
}

void PBCharacterData::ArenaDtor(void* object) {
  PBCharacterData* _this = reinterpret_cast< PBCharacterData* >(object);
  (void)_this;
}
void PBCharacterData::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void PBCharacterData::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}

void PBCharacterData::Clear() {
// @@protoc_insertion_point(message_clear_start:Protocol.PBCharacterData)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  skills_.Clear();
  if (GetArenaForAllocation() == nullptr && charmeta_ != nullptr) {
    delete charmeta_;
  }
  charmeta_ = nullptr;
  ::memset(&id_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&gold_) -
      reinterpret_cast<char*>(&id_)) + sizeof(gold_));
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* PBCharacterData::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // uint64 id = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 8)) {
          id_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // uint64 level = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 16)) {
          level_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // .Protocol.CharacterMetaData charMeta = 3;
      case 3:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 26)) {
          ptr = ctx->ParseMessage(_internal_mutable_charmeta(), ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // repeated .Protocol.PBSkillData skills = 4;
      case 4:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 34)) {
          ptr -= 1;
          do {
            ptr += 1;
            ptr = ctx->ParseMessage(_internal_add_skills(), ptr);
            CHK_(ptr);
            if (!ctx->DataAvailable(ptr)) break;
          } while (::PROTOBUF_NAMESPACE_ID::internal::ExpectTag<34>(ptr));
        } else goto handle_unusual;
        continue;
      // float hp = 5;
      case 5:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 45)) {
          hp_ = ::PROTOBUF_NAMESPACE_ID::internal::UnalignedLoad<float>(ptr);
          ptr += sizeof(float);
        } else goto handle_unusual;
        continue;
      // float mp = 6;
      case 6:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 53)) {
          mp_ = ::PROTOBUF_NAMESPACE_ID::internal::UnalignedLoad<float>(ptr);
          ptr += sizeof(float);
        } else goto handle_unusual;
        continue;
      // float maxhp = 7;
      case 7:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 61)) {
          maxhp_ = ::PROTOBUF_NAMESPACE_ID::internal::UnalignedLoad<float>(ptr);
          ptr += sizeof(float);
        } else goto handle_unusual;
        continue;
      // float maxmp = 8;
      case 8:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 69)) {
          maxmp_ = ::PROTOBUF_NAMESPACE_ID::internal::UnalignedLoad<float>(ptr);
          ptr += sizeof(float);
        } else goto handle_unusual;
        continue;
      // float exp = 9;
      case 9:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 77)) {
          exp_ = ::PROTOBUF_NAMESPACE_ID::internal::UnalignedLoad<float>(ptr);
          ptr += sizeof(float);
        } else goto handle_unusual;
        continue;
      // float maxexp = 10;
      case 10:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 85)) {
          maxexp_ = ::PROTOBUF_NAMESPACE_ID::internal::UnalignedLoad<float>(ptr);
          ptr += sizeof(float);
        } else goto handle_unusual;
        continue;
      // float gold = 11;
      case 11:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 93)) {
          gold_ = ::PROTOBUF_NAMESPACE_ID::internal::UnalignedLoad<float>(ptr);
          ptr += sizeof(float);
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag == 0) || ((tag & 7) == 4)) {
          CHK_(ptr);
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag,
            _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
            ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* PBCharacterData::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:Protocol.PBCharacterData)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // uint64 id = 1;
  if (this->id() != 0) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteUInt64ToArray(1, this->_internal_id(), target);
  }

  // uint64 level = 2;
  if (this->level() != 0) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteUInt64ToArray(2, this->_internal_level(), target);
  }

  // .Protocol.CharacterMetaData charMeta = 3;
  if (this->has_charmeta()) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(
        3, _Internal::charmeta(this), target, stream);
  }

  // repeated .Protocol.PBSkillData skills = 4;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->_internal_skills_size()); i < n; i++) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(4, this->_internal_skills(i), target, stream);
  }

  // float hp = 5;
  if (!(this->hp() <= 0 && this->hp() >= 0)) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteFloatToArray(5, this->_internal_hp(), target);
  }

  // float mp = 6;
  if (!(this->mp() <= 0 && this->mp() >= 0)) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteFloatToArray(6, this->_internal_mp(), target);
  }

  // float maxhp = 7;
  if (!(this->maxhp() <= 0 && this->maxhp() >= 0)) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteFloatToArray(7, this->_internal_maxhp(), target);
  }

  // float maxmp = 8;
  if (!(this->maxmp() <= 0 && this->maxmp() >= 0)) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteFloatToArray(8, this->_internal_maxmp(), target);
  }

  // float exp = 9;
  if (!(this->exp() <= 0 && this->exp() >= 0)) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteFloatToArray(9, this->_internal_exp(), target);
  }

  // float maxexp = 10;
  if (!(this->maxexp() <= 0 && this->maxexp() >= 0)) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteFloatToArray(10, this->_internal_maxexp(), target);
  }

  // float gold = 11;
  if (!(this->gold() <= 0 && this->gold() >= 0)) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteFloatToArray(11, this->_internal_gold(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:Protocol.PBCharacterData)
  return target;
}

size_t PBCharacterData::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:Protocol.PBCharacterData)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // repeated .Protocol.PBSkillData skills = 4;
  total_size += 1UL * this->_internal_skills_size();
  for (const auto& msg : this->skills_) {
    total_size +=
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(msg);
  }

  // .Protocol.CharacterMetaData charMeta = 3;
  if (this->has_charmeta()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
        *charmeta_);
  }

  // uint64 id = 1;
  if (this->id() != 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::UInt64Size(
        this->_internal_id());
  }

  // uint64 level = 2;
  if (this->level() != 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::UInt64Size(
        this->_internal_level());
  }

  // float hp = 5;
  if (!(this->hp() <= 0 && this->hp() >= 0)) {
    total_size += 1 + 4;
  }

  // float mp = 6;
  if (!(this->mp() <= 0 && this->mp() >= 0)) {
    total_size += 1 + 4;
  }

  // float maxhp = 7;
  if (!(this->maxhp() <= 0 && this->maxhp() >= 0)) {
    total_size += 1 + 4;
  }

  // float maxmp = 8;
  if (!(this->maxmp() <= 0 && this->maxmp() >= 0)) {
    total_size += 1 + 4;
  }

  // float exp = 9;
  if (!(this->exp() <= 0 && this->exp() >= 0)) {
    total_size += 1 + 4;
  }

  // float maxexp = 10;
  if (!(this->maxexp() <= 0 && this->maxexp() >= 0)) {
    total_size += 1 + 4;
  }

  // float gold = 11;
  if (!(this->gold() <= 0 && this->gold() >= 0)) {
    total_size += 1 + 4;
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void PBCharacterData::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:Protocol.PBCharacterData)
  GOOGLE_DCHECK_NE(&from, this);
  const PBCharacterData* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<PBCharacterData>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:Protocol.PBCharacterData)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:Protocol.PBCharacterData)
    MergeFrom(*source);
  }
}

void PBCharacterData::MergeFrom(const PBCharacterData& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:Protocol.PBCharacterData)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  skills_.MergeFrom(from.skills_);
  if (from.has_charmeta()) {
    _internal_mutable_charmeta()->::Protocol::CharacterMetaData::MergeFrom(from._internal_charmeta());
  }
  if (from.id() != 0) {
    _internal_set_id(from._internal_id());
  }
  if (from.level() != 0) {
    _internal_set_level(from._internal_level());
  }
  if (!(from.hp() <= 0 && from.hp() >= 0)) {
    _internal_set_hp(from._internal_hp());
  }
  if (!(from.mp() <= 0 && from.mp() >= 0)) {
    _internal_set_mp(from._internal_mp());
  }
  if (!(from.maxhp() <= 0 && from.maxhp() >= 0)) {
    _internal_set_maxhp(from._internal_maxhp());
  }
  if (!(from.maxmp() <= 0 && from.maxmp() >= 0)) {
    _internal_set_maxmp(from._internal_maxmp());
  }
  if (!(from.exp() <= 0 && from.exp() >= 0)) {
    _internal_set_exp(from._internal_exp());
  }
  if (!(from.maxexp() <= 0 && from.maxexp() >= 0)) {
    _internal_set_maxexp(from._internal_maxexp());
  }
  if (!(from.gold() <= 0 && from.gold() >= 0)) {
    _internal_set_gold(from._internal_gold());
  }
}

void PBCharacterData::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:Protocol.PBCharacterData)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void PBCharacterData::CopyFrom(const PBCharacterData& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:Protocol.PBCharacterData)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool PBCharacterData::IsInitialized() const {
  return true;
}

void PBCharacterData::InternalSwap(PBCharacterData* other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  skills_.InternalSwap(&other->skills_);
  ::PROTOBUF_NAMESPACE_ID::internal::memswap<
      PROTOBUF_FIELD_OFFSET(PBCharacterData, gold_)
      + sizeof(PBCharacterData::gold_)
      - PROTOBUF_FIELD_OFFSET(PBCharacterData, charmeta_)>(
          reinterpret_cast<char*>(&charmeta_),
          reinterpret_cast<char*>(&other->charmeta_));
}

::PROTOBUF_NAMESPACE_ID::Metadata PBCharacterData::GetMetadata() const {
  return ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(
      &descriptor_table_Struct_2eproto_getter, &descriptor_table_Struct_2eproto_once,
      file_level_metadata_Struct_2eproto[2]);
}

// ===================================================================

class PBItemData::_Internal {
 public:
  static const ::Protocol::ConsumMetaData& consumdata(const PBItemData* msg);
  static const ::Protocol::EquipMetaData& equipdata(const PBItemData* msg);
};

const ::Protocol::ConsumMetaData&
PBItemData::_Internal::consumdata(const PBItemData* msg) {
  return *msg->consumdata_;
}
const ::Protocol::EquipMetaData&
PBItemData::_Internal::equipdata(const PBItemData* msg) {
  return *msg->equipdata_;
}
PBItemData::PBItemData(::PROTOBUF_NAMESPACE_ID::Arena* arena)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena) {
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:Protocol.PBItemData)
}
PBItemData::PBItemData(const PBItemData& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  if (from._internal_has_consumdata()) {
    consumdata_ = new ::Protocol::ConsumMetaData(*from.consumdata_);
  } else {
    consumdata_ = nullptr;
  }
  if (from._internal_has_equipdata()) {
    equipdata_ = new ::Protocol::EquipMetaData(*from.equipdata_);
  } else {
    equipdata_ = nullptr;
  }
  ::memcpy(&count_, &from.count_,
    static_cast<size_t>(reinterpret_cast<char*>(&type_) -
    reinterpret_cast<char*>(&count_)) + sizeof(type_));
  // @@protoc_insertion_point(copy_constructor:Protocol.PBItemData)
}

void PBItemData::SharedCtor() {
::memset(reinterpret_cast<char*>(this) + static_cast<size_t>(
    reinterpret_cast<char*>(&consumdata_) - reinterpret_cast<char*>(this)),
    0, static_cast<size_t>(reinterpret_cast<char*>(&type_) -
    reinterpret_cast<char*>(&consumdata_)) + sizeof(type_));
}

PBItemData::~PBItemData() {
  // @@protoc_insertion_point(destructor:Protocol.PBItemData)
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

void PBItemData::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
  if (this != internal_default_instance()) delete consumdata_;
  if (this != internal_default_instance()) delete equipdata_;
}

void PBItemData::ArenaDtor(void* object) {
  PBItemData* _this = reinterpret_cast< PBItemData* >(object);
  (void)_this;
}
void PBItemData::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void PBItemData::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}

void PBItemData::Clear() {
// @@protoc_insertion_point(message_clear_start:Protocol.PBItemData)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  if (GetArenaForAllocation() == nullptr && consumdata_ != nullptr) {
    delete consumdata_;
  }
  consumdata_ = nullptr;
  if (GetArenaForAllocation() == nullptr && equipdata_ != nullptr) {
    delete equipdata_;
  }
  equipdata_ = nullptr;
  ::memset(&count_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&type_) -
      reinterpret_cast<char*>(&count_)) + sizeof(type_));
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* PBItemData::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // .Protocol.DataType type = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 8)) {
          ::PROTOBUF_NAMESPACE_ID::uint64 val = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
          _internal_set_type(static_cast<::Protocol::DataType>(val));
        } else goto handle_unusual;
        continue;
      // .Protocol.ConsumMetaData consumData = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 18)) {
          ptr = ctx->ParseMessage(_internal_mutable_consumdata(), ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // uint64 count = 3;
      case 3:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 24)) {
          count_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // .Protocol.EquipMetaData equipData = 4;
      case 4:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 34)) {
          ptr = ctx->ParseMessage(_internal_mutable_equipdata(), ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // uint64 upgrade = 5;
      case 5:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 40)) {
          upgrade_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // uint64 idx = 6;
      case 6:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 48)) {
          idx_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag == 0) || ((tag & 7) == 4)) {
          CHK_(ptr);
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag,
            _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
            ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* PBItemData::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:Protocol.PBItemData)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .Protocol.DataType type = 1;
  if (this->type() != 0) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteEnumToArray(
      1, this->_internal_type(), target);
  }

  // .Protocol.ConsumMetaData consumData = 2;
  if (this->has_consumdata()) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(
        2, _Internal::consumdata(this), target, stream);
  }

  // uint64 count = 3;
  if (this->count() != 0) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteUInt64ToArray(3, this->_internal_count(), target);
  }

  // .Protocol.EquipMetaData equipData = 4;
  if (this->has_equipdata()) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(
        4, _Internal::equipdata(this), target, stream);
  }

  // uint64 upgrade = 5;
  if (this->upgrade() != 0) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteUInt64ToArray(5, this->_internal_upgrade(), target);
  }

  // uint64 idx = 6;
  if (this->idx() != 0) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteUInt64ToArray(6, this->_internal_idx(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:Protocol.PBItemData)
  return target;
}

size_t PBItemData::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:Protocol.PBItemData)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // .Protocol.ConsumMetaData consumData = 2;
  if (this->has_consumdata()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
        *consumdata_);
  }

  // .Protocol.EquipMetaData equipData = 4;
  if (this->has_equipdata()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
        *equipdata_);
  }

  // uint64 count = 3;
  if (this->count() != 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::UInt64Size(
        this->_internal_count());
  }

  // uint64 upgrade = 5;
  if (this->upgrade() != 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::UInt64Size(
        this->_internal_upgrade());
  }

  // uint64 idx = 6;
  if (this->idx() != 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::UInt64Size(
        this->_internal_idx());
  }

  // .Protocol.DataType type = 1;
  if (this->type() != 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::EnumSize(this->_internal_type());
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void PBItemData::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:Protocol.PBItemData)
  GOOGLE_DCHECK_NE(&from, this);
  const PBItemData* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<PBItemData>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:Protocol.PBItemData)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:Protocol.PBItemData)
    MergeFrom(*source);
  }
}

void PBItemData::MergeFrom(const PBItemData& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:Protocol.PBItemData)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.has_consumdata()) {
    _internal_mutable_consumdata()->::Protocol::ConsumMetaData::MergeFrom(from._internal_consumdata());
  }
  if (from.has_equipdata()) {
    _internal_mutable_equipdata()->::Protocol::EquipMetaData::MergeFrom(from._internal_equipdata());
  }
  if (from.count() != 0) {
    _internal_set_count(from._internal_count());
  }
  if (from.upgrade() != 0) {
    _internal_set_upgrade(from._internal_upgrade());
  }
  if (from.idx() != 0) {
    _internal_set_idx(from._internal_idx());
  }
  if (from.type() != 0) {
    _internal_set_type(from._internal_type());
  }
}

void PBItemData::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:Protocol.PBItemData)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void PBItemData::CopyFrom(const PBItemData& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:Protocol.PBItemData)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool PBItemData::IsInitialized() const {
  return true;
}

void PBItemData::InternalSwap(PBItemData* other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::internal::memswap<
      PROTOBUF_FIELD_OFFSET(PBItemData, type_)
      + sizeof(PBItemData::type_)
      - PROTOBUF_FIELD_OFFSET(PBItemData, consumdata_)>(
          reinterpret_cast<char*>(&consumdata_),
          reinterpret_cast<char*>(&other->consumdata_));
}

::PROTOBUF_NAMESPACE_ID::Metadata PBItemData::GetMetadata() const {
  return ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(
      &descriptor_table_Struct_2eproto_getter, &descriptor_table_Struct_2eproto_once,
      file_level_metadata_Struct_2eproto[3]);
}

// ===================================================================

class PBSkillData::_Internal {
 public:
  static const ::Protocol::SkillMetaData& skillmeta(const PBSkillData* msg);
};

const ::Protocol::SkillMetaData&
PBSkillData::_Internal::skillmeta(const PBSkillData* msg) {
  return *msg->skillmeta_;
}
PBSkillData::PBSkillData(::PROTOBUF_NAMESPACE_ID::Arena* arena)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena) {
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:Protocol.PBSkillData)
}
PBSkillData::PBSkillData(const PBSkillData& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  if (from._internal_has_skillmeta()) {
    skillmeta_ = new ::Protocol::SkillMetaData(*from.skillmeta_);
  } else {
    skillmeta_ = nullptr;
  }
  ::memcpy(&id_, &from.id_,
    static_cast<size_t>(reinterpret_cast<char*>(&upgrade_) -
    reinterpret_cast<char*>(&id_)) + sizeof(upgrade_));
  // @@protoc_insertion_point(copy_constructor:Protocol.PBSkillData)
}

void PBSkillData::SharedCtor() {
::memset(reinterpret_cast<char*>(this) + static_cast<size_t>(
    reinterpret_cast<char*>(&skillmeta_) - reinterpret_cast<char*>(this)),
    0, static_cast<size_t>(reinterpret_cast<char*>(&upgrade_) -
    reinterpret_cast<char*>(&skillmeta_)) + sizeof(upgrade_));
}

PBSkillData::~PBSkillData() {
  // @@protoc_insertion_point(destructor:Protocol.PBSkillData)
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

void PBSkillData::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
  if (this != internal_default_instance()) delete skillmeta_;
}

void PBSkillData::ArenaDtor(void* object) {
  PBSkillData* _this = reinterpret_cast< PBSkillData* >(object);
  (void)_this;
}
void PBSkillData::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void PBSkillData::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}

void PBSkillData::Clear() {
// @@protoc_insertion_point(message_clear_start:Protocol.PBSkillData)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  if (GetArenaForAllocation() == nullptr && skillmeta_ != nullptr) {
    delete skillmeta_;
  }
  skillmeta_ = nullptr;
  ::memset(&id_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&upgrade_) -
      reinterpret_cast<char*>(&id_)) + sizeof(upgrade_));
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* PBSkillData::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // uint64 id = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 8)) {
          id_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // uint64 upgrade = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 16)) {
          upgrade_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // .Protocol.SkillMetaData skillMeta = 3;
      case 3:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 26)) {
          ptr = ctx->ParseMessage(_internal_mutable_skillmeta(), ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag == 0) || ((tag & 7) == 4)) {
          CHK_(ptr);
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag,
            _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
            ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* PBSkillData::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:Protocol.PBSkillData)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // uint64 id = 1;
  if (this->id() != 0) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteUInt64ToArray(1, this->_internal_id(), target);
  }

  // uint64 upgrade = 2;
  if (this->upgrade() != 0) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteUInt64ToArray(2, this->_internal_upgrade(), target);
  }

  // .Protocol.SkillMetaData skillMeta = 3;
  if (this->has_skillmeta()) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(
        3, _Internal::skillmeta(this), target, stream);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:Protocol.PBSkillData)
  return target;
}

size_t PBSkillData::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:Protocol.PBSkillData)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // .Protocol.SkillMetaData skillMeta = 3;
  if (this->has_skillmeta()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
        *skillmeta_);
  }

  // uint64 id = 1;
  if (this->id() != 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::UInt64Size(
        this->_internal_id());
  }

  // uint64 upgrade = 2;
  if (this->upgrade() != 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::UInt64Size(
        this->_internal_upgrade());
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void PBSkillData::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:Protocol.PBSkillData)
  GOOGLE_DCHECK_NE(&from, this);
  const PBSkillData* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<PBSkillData>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:Protocol.PBSkillData)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:Protocol.PBSkillData)
    MergeFrom(*source);
  }
}

void PBSkillData::MergeFrom(const PBSkillData& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:Protocol.PBSkillData)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.has_skillmeta()) {
    _internal_mutable_skillmeta()->::Protocol::SkillMetaData::MergeFrom(from._internal_skillmeta());
  }
  if (from.id() != 0) {
    _internal_set_id(from._internal_id());
  }
  if (from.upgrade() != 0) {
    _internal_set_upgrade(from._internal_upgrade());
  }
}

void PBSkillData::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:Protocol.PBSkillData)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void PBSkillData::CopyFrom(const PBSkillData& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:Protocol.PBSkillData)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool PBSkillData::IsInitialized() const {
  return true;
}

void PBSkillData::InternalSwap(PBSkillData* other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::internal::memswap<
      PROTOBUF_FIELD_OFFSET(PBSkillData, upgrade_)
      + sizeof(PBSkillData::upgrade_)
      - PROTOBUF_FIELD_OFFSET(PBSkillData, skillmeta_)>(
          reinterpret_cast<char*>(&skillmeta_),
          reinterpret_cast<char*>(&other->skillmeta_));
}

::PROTOBUF_NAMESPACE_ID::Metadata PBSkillData::GetMetadata() const {
  return ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(
      &descriptor_table_Struct_2eproto_getter, &descriptor_table_Struct_2eproto_once,
      file_level_metadata_Struct_2eproto[4]);
}

// ===================================================================

class CharacterMetaData::_Internal {
 public:
  static const ::Protocol::StatMetaData& stat(const CharacterMetaData* msg);
};

const ::Protocol::StatMetaData&
CharacterMetaData::_Internal::stat(const CharacterMetaData* msg) {
  return *msg->stat_;
}
CharacterMetaData::CharacterMetaData(::PROTOBUF_NAMESPACE_ID::Arena* arena)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena),
  skills_(arena) {
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:Protocol.CharacterMetaData)
}
CharacterMetaData::CharacterMetaData(const CharacterMetaData& from)
  : ::PROTOBUF_NAMESPACE_ID::Message(),
      skills_(from.skills_) {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  resource_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (!from._internal_resource().empty()) {
    resource_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, from._internal_resource(), 
      GetArenaForAllocation());
  }
  anim_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (!from._internal_anim().empty()) {
    anim_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, from._internal_anim(), 
      GetArenaForAllocation());
  }
  if (from._internal_has_stat()) {
    stat_ = new ::Protocol::StatMetaData(*from.stat_);
  } else {
    stat_ = nullptr;
  }
  ::memcpy(&id_, &from.id_,
    static_cast<size_t>(reinterpret_cast<char*>(&type_) -
    reinterpret_cast<char*>(&id_)) + sizeof(type_));
  // @@protoc_insertion_point(copy_constructor:Protocol.CharacterMetaData)
}

void CharacterMetaData::SharedCtor() {
resource_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
anim_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
::memset(reinterpret_cast<char*>(this) + static_cast<size_t>(
    reinterpret_cast<char*>(&stat_) - reinterpret_cast<char*>(this)),
    0, static_cast<size_t>(reinterpret_cast<char*>(&type_) -
    reinterpret_cast<char*>(&stat_)) + sizeof(type_));
}

CharacterMetaData::~CharacterMetaData() {
  // @@protoc_insertion_point(destructor:Protocol.CharacterMetaData)
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

void CharacterMetaData::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
  resource_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  anim_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (this != internal_default_instance()) delete stat_;
}

void CharacterMetaData::ArenaDtor(void* object) {
  CharacterMetaData* _this = reinterpret_cast< CharacterMetaData* >(object);
  (void)_this;
}
void CharacterMetaData::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void CharacterMetaData::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}

void CharacterMetaData::Clear() {
// @@protoc_insertion_point(message_clear_start:Protocol.CharacterMetaData)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  skills_.Clear();
  resource_.ClearToEmpty();
  anim_.ClearToEmpty();
  if (GetArenaForAllocation() == nullptr && stat_ != nullptr) {
    delete stat_;
  }
  stat_ = nullptr;
  ::memset(&id_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&type_) -
      reinterpret_cast<char*>(&id_)) + sizeof(type_));
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* CharacterMetaData::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // uint64 id = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 8)) {
          id_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // string resource = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 18)) {
          auto str = _internal_mutable_resource();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "Protocol.CharacterMetaData.resource"));
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // string anim = 3;
      case 3:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 26)) {
          auto str = _internal_mutable_anim();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "Protocol.CharacterMetaData.anim"));
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // .Protocol.PlayerType type = 4;
      case 4:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 32)) {
          ::PROTOBUF_NAMESPACE_ID::uint64 val = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
          _internal_set_type(static_cast<::Protocol::PlayerType>(val));
        } else goto handle_unusual;
        continue;
      // repeated uint64 skills = 5;
      case 5:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 42)) {
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::PackedUInt64Parser(_internal_mutable_skills(), ptr, ctx);
          CHK_(ptr);
        } else if (static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 40) {
          _internal_add_skills(::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr));
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // .Protocol.StatMetaData stat = 6;
      case 6:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 50)) {
          ptr = ctx->ParseMessage(_internal_mutable_stat(), ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag == 0) || ((tag & 7) == 4)) {
          CHK_(ptr);
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag,
            _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
            ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* CharacterMetaData::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:Protocol.CharacterMetaData)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // uint64 id = 1;
  if (this->id() != 0) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteUInt64ToArray(1, this->_internal_id(), target);
  }

  // string resource = 2;
  if (!this->resource().empty()) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_resource().data(), static_cast<int>(this->_internal_resource().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "Protocol.CharacterMetaData.resource");
    target = stream->WriteStringMaybeAliased(
        2, this->_internal_resource(), target);
  }

  // string anim = 3;
  if (!this->anim().empty()) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_anim().data(), static_cast<int>(this->_internal_anim().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "Protocol.CharacterMetaData.anim");
    target = stream->WriteStringMaybeAliased(
        3, this->_internal_anim(), target);
  }

  // .Protocol.PlayerType type = 4;
  if (this->type() != 0) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteEnumToArray(
      4, this->_internal_type(), target);
  }

  // repeated uint64 skills = 5;
  {
    int byte_size = _skills_cached_byte_size_.load(std::memory_order_relaxed);
    if (byte_size > 0) {
      target = stream->WriteUInt64Packed(
          5, _internal_skills(), byte_size, target);
    }
  }

  // .Protocol.StatMetaData stat = 6;
  if (this->has_stat()) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(
        6, _Internal::stat(this), target, stream);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:Protocol.CharacterMetaData)
  return target;
}

size_t CharacterMetaData::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:Protocol.CharacterMetaData)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // repeated uint64 skills = 5;
  {
    size_t data_size = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      UInt64Size(this->skills_);
    if (data_size > 0) {
      total_size += 1 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::Int32Size(
            static_cast<::PROTOBUF_NAMESPACE_ID::int32>(data_size));
    }
    int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(data_size);
    _skills_cached_byte_size_.store(cached_size,
                                    std::memory_order_relaxed);
    total_size += data_size;
  }

  // string resource = 2;
  if (!this->resource().empty()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_resource());
  }

  // string anim = 3;
  if (!this->anim().empty()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_anim());
  }

  // .Protocol.StatMetaData stat = 6;
  if (this->has_stat()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
        *stat_);
  }

  // uint64 id = 1;
  if (this->id() != 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::UInt64Size(
        this->_internal_id());
  }

  // .Protocol.PlayerType type = 4;
  if (this->type() != 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::EnumSize(this->_internal_type());
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void CharacterMetaData::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:Protocol.CharacterMetaData)
  GOOGLE_DCHECK_NE(&from, this);
  const CharacterMetaData* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<CharacterMetaData>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:Protocol.CharacterMetaData)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:Protocol.CharacterMetaData)
    MergeFrom(*source);
  }
}

void CharacterMetaData::MergeFrom(const CharacterMetaData& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:Protocol.CharacterMetaData)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  skills_.MergeFrom(from.skills_);
  if (!from.resource().empty()) {
    _internal_set_resource(from._internal_resource());
  }
  if (!from.anim().empty()) {
    _internal_set_anim(from._internal_anim());
  }
  if (from.has_stat()) {
    _internal_mutable_stat()->::Protocol::StatMetaData::MergeFrom(from._internal_stat());
  }
  if (from.id() != 0) {
    _internal_set_id(from._internal_id());
  }
  if (from.type() != 0) {
    _internal_set_type(from._internal_type());
  }
}

void CharacterMetaData::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:Protocol.CharacterMetaData)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void CharacterMetaData::CopyFrom(const CharacterMetaData& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:Protocol.CharacterMetaData)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool CharacterMetaData::IsInitialized() const {
  return true;
}

void CharacterMetaData::InternalSwap(CharacterMetaData* other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  skills_.InternalSwap(&other->skills_);
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::InternalSwap(
      &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(),
      &resource_, GetArenaForAllocation(),
      &other->resource_, other->GetArenaForAllocation()
  );
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::InternalSwap(
      &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(),
      &anim_, GetArenaForAllocation(),
      &other->anim_, other->GetArenaForAllocation()
  );
  ::PROTOBUF_NAMESPACE_ID::internal::memswap<
      PROTOBUF_FIELD_OFFSET(CharacterMetaData, type_)
      + sizeof(CharacterMetaData::type_)
      - PROTOBUF_FIELD_OFFSET(CharacterMetaData, stat_)>(
          reinterpret_cast<char*>(&stat_),
          reinterpret_cast<char*>(&other->stat_));
}

::PROTOBUF_NAMESPACE_ID::Metadata CharacterMetaData::GetMetadata() const {
  return ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(
      &descriptor_table_Struct_2eproto_getter, &descriptor_table_Struct_2eproto_once,
      file_level_metadata_Struct_2eproto[5]);
}

// ===================================================================

class SkillMetaData::_Internal {
 public:
};

SkillMetaData::SkillMetaData(::PROTOBUF_NAMESPACE_ID::Arena* arena)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena) {
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:Protocol.SkillMetaData)
}
SkillMetaData::SkillMetaData(const SkillMetaData& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  name_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (!from._internal_name().empty()) {
    name_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, from._internal_name(), 
      GetArenaForAllocation());
  }
  resource_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (!from._internal_resource().empty()) {
    resource_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, from._internal_resource(), 
      GetArenaForAllocation());
  }
  ::memcpy(&id_, &from.id_,
    static_cast<size_t>(reinterpret_cast<char*>(&cooldown_) -
    reinterpret_cast<char*>(&id_)) + sizeof(cooldown_));
  // @@protoc_insertion_point(copy_constructor:Protocol.SkillMetaData)
}

void SkillMetaData::SharedCtor() {
name_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
resource_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
::memset(reinterpret_cast<char*>(this) + static_cast<size_t>(
    reinterpret_cast<char*>(&id_) - reinterpret_cast<char*>(this)),
    0, static_cast<size_t>(reinterpret_cast<char*>(&cooldown_) -
    reinterpret_cast<char*>(&id_)) + sizeof(cooldown_));
}

SkillMetaData::~SkillMetaData() {
  // @@protoc_insertion_point(destructor:Protocol.SkillMetaData)
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

void SkillMetaData::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
  name_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  resource_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}

void SkillMetaData::ArenaDtor(void* object) {
  SkillMetaData* _this = reinterpret_cast< SkillMetaData* >(object);
  (void)_this;
}
void SkillMetaData::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void SkillMetaData::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}

void SkillMetaData::Clear() {
// @@protoc_insertion_point(message_clear_start:Protocol.SkillMetaData)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  name_.ClearToEmpty();
  resource_.ClearToEmpty();
  ::memset(&id_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&cooldown_) -
      reinterpret_cast<char*>(&id_)) + sizeof(cooldown_));
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* SkillMetaData::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // uint64 id = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 8)) {
          id_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // string name = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 18)) {
          auto str = _internal_mutable_name();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "Protocol.SkillMetaData.name"));
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // float cooldown = 3;
      case 3:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 29)) {
          cooldown_ = ::PROTOBUF_NAMESPACE_ID::internal::UnalignedLoad<float>(ptr);
          ptr += sizeof(float);
        } else goto handle_unusual;
        continue;
      // uint64 damage = 4;
      case 4:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 32)) {
          damage_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // uint64 mpconsumption = 5;
      case 5:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 40)) {
          mpconsumption_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // string resource = 6;
      case 6:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 50)) {
          auto str = _internal_mutable_resource();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "Protocol.SkillMetaData.resource"));
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag == 0) || ((tag & 7) == 4)) {
          CHK_(ptr);
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag,
            _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
            ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* SkillMetaData::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:Protocol.SkillMetaData)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // uint64 id = 1;
  if (this->id() != 0) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteUInt64ToArray(1, this->_internal_id(), target);
  }

  // string name = 2;
  if (!this->name().empty()) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_name().data(), static_cast<int>(this->_internal_name().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "Protocol.SkillMetaData.name");
    target = stream->WriteStringMaybeAliased(
        2, this->_internal_name(), target);
  }

  // float cooldown = 3;
  if (!(this->cooldown() <= 0 && this->cooldown() >= 0)) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteFloatToArray(3, this->_internal_cooldown(), target);
  }

  // uint64 damage = 4;
  if (this->damage() != 0) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteUInt64ToArray(4, this->_internal_damage(), target);
  }

  // uint64 mpconsumption = 5;
  if (this->mpconsumption() != 0) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteUInt64ToArray(5, this->_internal_mpconsumption(), target);
  }

  // string resource = 6;
  if (!this->resource().empty()) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_resource().data(), static_cast<int>(this->_internal_resource().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "Protocol.SkillMetaData.resource");
    target = stream->WriteStringMaybeAliased(
        6, this->_internal_resource(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:Protocol.SkillMetaData)
  return target;
}

size_t SkillMetaData::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:Protocol.SkillMetaData)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // string name = 2;
  if (!this->name().empty()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_name());
  }

  // string resource = 6;
  if (!this->resource().empty()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_resource());
  }

  // uint64 id = 1;
  if (this->id() != 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::UInt64Size(
        this->_internal_id());
  }

  // uint64 damage = 4;
  if (this->damage() != 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::UInt64Size(
        this->_internal_damage());
  }

  // uint64 mpconsumption = 5;
  if (this->mpconsumption() != 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::UInt64Size(
        this->_internal_mpconsumption());
  }

  // float cooldown = 3;
  if (!(this->cooldown() <= 0 && this->cooldown() >= 0)) {
    total_size += 1 + 4;
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void SkillMetaData::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:Protocol.SkillMetaData)
  GOOGLE_DCHECK_NE(&from, this);
  const SkillMetaData* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<SkillMetaData>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:Protocol.SkillMetaData)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:Protocol.SkillMetaData)
    MergeFrom(*source);
  }
}

void SkillMetaData::MergeFrom(const SkillMetaData& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:Protocol.SkillMetaData)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (!from.name().empty()) {
    _internal_set_name(from._internal_name());
  }
  if (!from.resource().empty()) {
    _internal_set_resource(from._internal_resource());
  }
  if (from.id() != 0) {
    _internal_set_id(from._internal_id());
  }
  if (from.damage() != 0) {
    _internal_set_damage(from._internal_damage());
  }
  if (from.mpconsumption() != 0) {
    _internal_set_mpconsumption(from._internal_mpconsumption());
  }
  if (!(from.cooldown() <= 0 && from.cooldown() >= 0)) {
    _internal_set_cooldown(from._internal_cooldown());
  }
}

void SkillMetaData::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:Protocol.SkillMetaData)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void SkillMetaData::CopyFrom(const SkillMetaData& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:Protocol.SkillMetaData)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool SkillMetaData::IsInitialized() const {
  return true;
}

void SkillMetaData::InternalSwap(SkillMetaData* other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::InternalSwap(
      &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(),
      &name_, GetArenaForAllocation(),
      &other->name_, other->GetArenaForAllocation()
  );
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::InternalSwap(
      &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(),
      &resource_, GetArenaForAllocation(),
      &other->resource_, other->GetArenaForAllocation()
  );
  ::PROTOBUF_NAMESPACE_ID::internal::memswap<
      PROTOBUF_FIELD_OFFSET(SkillMetaData, cooldown_)
      + sizeof(SkillMetaData::cooldown_)
      - PROTOBUF_FIELD_OFFSET(SkillMetaData, id_)>(
          reinterpret_cast<char*>(&id_),
          reinterpret_cast<char*>(&other->id_));
}

::PROTOBUF_NAMESPACE_ID::Metadata SkillMetaData::GetMetadata() const {
  return ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(
      &descriptor_table_Struct_2eproto_getter, &descriptor_table_Struct_2eproto_once,
      file_level_metadata_Struct_2eproto[6]);
}

// ===================================================================

class ProjectileInfo::_Internal {
 public:
};

ProjectileInfo::ProjectileInfo(::PROTOBUF_NAMESPACE_ID::Arena* arena)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena) {
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:Protocol.ProjectileInfo)
}
ProjectileInfo::ProjectileInfo(const ProjectileInfo& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  name_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (!from._internal_name().empty()) {
    name_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, from._internal_name(), 
      GetArenaForAllocation());
  }
  sourcename_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (!from._internal_sourcename().empty()) {
    sourcename_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, from._internal_sourcename(), 
      GetArenaForAllocation());
  }
  ::memcpy(&speed_, &from.speed_,
    static_cast<size_t>(reinterpret_cast<char*>(&range_) -
    reinterpret_cast<char*>(&speed_)) + sizeof(range_));
  // @@protoc_insertion_point(copy_constructor:Protocol.ProjectileInfo)
}

void ProjectileInfo::SharedCtor() {
name_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
sourcename_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
::memset(reinterpret_cast<char*>(this) + static_cast<size_t>(
    reinterpret_cast<char*>(&speed_) - reinterpret_cast<char*>(this)),
    0, static_cast<size_t>(reinterpret_cast<char*>(&range_) -
    reinterpret_cast<char*>(&speed_)) + sizeof(range_));
}

ProjectileInfo::~ProjectileInfo() {
  // @@protoc_insertion_point(destructor:Protocol.ProjectileInfo)
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

void ProjectileInfo::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
  name_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  sourcename_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}

void ProjectileInfo::ArenaDtor(void* object) {
  ProjectileInfo* _this = reinterpret_cast< ProjectileInfo* >(object);
  (void)_this;
}
void ProjectileInfo::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void ProjectileInfo::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}

void ProjectileInfo::Clear() {
// @@protoc_insertion_point(message_clear_start:Protocol.ProjectileInfo)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  name_.ClearToEmpty();
  sourcename_.ClearToEmpty();
  ::memset(&speed_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&range_) -
      reinterpret_cast<char*>(&speed_)) + sizeof(range_));
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* ProjectileInfo::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // string name = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 10)) {
          auto str = _internal_mutable_name();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "Protocol.ProjectileInfo.name"));
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // float speed = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 21)) {
          speed_ = ::PROTOBUF_NAMESPACE_ID::internal::UnalignedLoad<float>(ptr);
          ptr += sizeof(float);
        } else goto handle_unusual;
        continue;
      // float range = 3;
      case 3:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 29)) {
          range_ = ::PROTOBUF_NAMESPACE_ID::internal::UnalignedLoad<float>(ptr);
          ptr += sizeof(float);
        } else goto handle_unusual;
        continue;
      // string sourceName = 4;
      case 4:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 34)) {
          auto str = _internal_mutable_sourcename();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "Protocol.ProjectileInfo.sourceName"));
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag == 0) || ((tag & 7) == 4)) {
          CHK_(ptr);
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag,
            _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
            ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* ProjectileInfo::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:Protocol.ProjectileInfo)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string name = 1;
  if (!this->name().empty()) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_name().data(), static_cast<int>(this->_internal_name().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "Protocol.ProjectileInfo.name");
    target = stream->WriteStringMaybeAliased(
        1, this->_internal_name(), target);
  }

  // float speed = 2;
  if (!(this->speed() <= 0 && this->speed() >= 0)) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteFloatToArray(2, this->_internal_speed(), target);
  }

  // float range = 3;
  if (!(this->range() <= 0 && this->range() >= 0)) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteFloatToArray(3, this->_internal_range(), target);
  }

  // string sourceName = 4;
  if (!this->sourcename().empty()) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_sourcename().data(), static_cast<int>(this->_internal_sourcename().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "Protocol.ProjectileInfo.sourceName");
    target = stream->WriteStringMaybeAliased(
        4, this->_internal_sourcename(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:Protocol.ProjectileInfo)
  return target;
}

size_t ProjectileInfo::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:Protocol.ProjectileInfo)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // string name = 1;
  if (!this->name().empty()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_name());
  }

  // string sourceName = 4;
  if (!this->sourcename().empty()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_sourcename());
  }

  // float speed = 2;
  if (!(this->speed() <= 0 && this->speed() >= 0)) {
    total_size += 1 + 4;
  }

  // float range = 3;
  if (!(this->range() <= 0 && this->range() >= 0)) {
    total_size += 1 + 4;
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void ProjectileInfo::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:Protocol.ProjectileInfo)
  GOOGLE_DCHECK_NE(&from, this);
  const ProjectileInfo* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<ProjectileInfo>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:Protocol.ProjectileInfo)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:Protocol.ProjectileInfo)
    MergeFrom(*source);
  }
}

void ProjectileInfo::MergeFrom(const ProjectileInfo& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:Protocol.ProjectileInfo)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (!from.name().empty()) {
    _internal_set_name(from._internal_name());
  }
  if (!from.sourcename().empty()) {
    _internal_set_sourcename(from._internal_sourcename());
  }
  if (!(from.speed() <= 0 && from.speed() >= 0)) {
    _internal_set_speed(from._internal_speed());
  }
  if (!(from.range() <= 0 && from.range() >= 0)) {
    _internal_set_range(from._internal_range());
  }
}

void ProjectileInfo::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:Protocol.ProjectileInfo)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void ProjectileInfo::CopyFrom(const ProjectileInfo& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:Protocol.ProjectileInfo)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool ProjectileInfo::IsInitialized() const {
  return true;
}

void ProjectileInfo::InternalSwap(ProjectileInfo* other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::InternalSwap(
      &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(),
      &name_, GetArenaForAllocation(),
      &other->name_, other->GetArenaForAllocation()
  );
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::InternalSwap(
      &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(),
      &sourcename_, GetArenaForAllocation(),
      &other->sourcename_, other->GetArenaForAllocation()
  );
  ::PROTOBUF_NAMESPACE_ID::internal::memswap<
      PROTOBUF_FIELD_OFFSET(ProjectileInfo, range_)
      + sizeof(ProjectileInfo::range_)
      - PROTOBUF_FIELD_OFFSET(ProjectileInfo, speed_)>(
          reinterpret_cast<char*>(&speed_),
          reinterpret_cast<char*>(&other->speed_));
}

::PROTOBUF_NAMESPACE_ID::Metadata ProjectileInfo::GetMetadata() const {
  return ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(
      &descriptor_table_Struct_2eproto_getter, &descriptor_table_Struct_2eproto_once,
      file_level_metadata_Struct_2eproto[7]);
}

// ===================================================================

class ConsumMetaData::_Internal {
 public:
};

ConsumMetaData::ConsumMetaData(::PROTOBUF_NAMESPACE_ID::Arena* arena)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena) {
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:Protocol.ConsumMetaData)
}
ConsumMetaData::ConsumMetaData(const ConsumMetaData& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  name_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (!from._internal_name().empty()) {
    name_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, from._internal_name(), 
      GetArenaForAllocation());
  }
  resource_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (!from._internal_resource().empty()) {
    resource_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, from._internal_resource(), 
      GetArenaForAllocation());
  }
  desc_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (!from._internal_desc().empty()) {
    desc_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, from._internal_desc(), 
      GetArenaForAllocation());
  }
  ::memcpy(&id_, &from.id_,
    static_cast<size_t>(reinterpret_cast<char*>(&price_) -
    reinterpret_cast<char*>(&id_)) + sizeof(price_));
  // @@protoc_insertion_point(copy_constructor:Protocol.ConsumMetaData)
}

void ConsumMetaData::SharedCtor() {
name_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
resource_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
desc_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
::memset(reinterpret_cast<char*>(this) + static_cast<size_t>(
    reinterpret_cast<char*>(&id_) - reinterpret_cast<char*>(this)),
    0, static_cast<size_t>(reinterpret_cast<char*>(&price_) -
    reinterpret_cast<char*>(&id_)) + sizeof(price_));
}

ConsumMetaData::~ConsumMetaData() {
  // @@protoc_insertion_point(destructor:Protocol.ConsumMetaData)
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

void ConsumMetaData::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
  name_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  resource_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  desc_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}

void ConsumMetaData::ArenaDtor(void* object) {
  ConsumMetaData* _this = reinterpret_cast< ConsumMetaData* >(object);
  (void)_this;
}
void ConsumMetaData::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void ConsumMetaData::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}

void ConsumMetaData::Clear() {
// @@protoc_insertion_point(message_clear_start:Protocol.ConsumMetaData)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  name_.ClearToEmpty();
  resource_.ClearToEmpty();
  desc_.ClearToEmpty();
  ::memset(&id_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&price_) -
      reinterpret_cast<char*>(&id_)) + sizeof(price_));
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* ConsumMetaData::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // uint64 id = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 8)) {
          id_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // string name = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 18)) {
          auto str = _internal_mutable_name();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "Protocol.ConsumMetaData.name"));
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // uint64 hp = 3;
      case 3:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 24)) {
          hp_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // uint64 mp = 4;
      case 4:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 32)) {
          mp_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // uint64 percentage = 5;
      case 5:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 40)) {
          percentage_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // uint64 price = 6;
      case 6:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 48)) {
          price_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // string resource = 7;
      case 7:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 58)) {
          auto str = _internal_mutable_resource();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "Protocol.ConsumMetaData.resource"));
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // string desc = 8;
      case 8:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 66)) {
          auto str = _internal_mutable_desc();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "Protocol.ConsumMetaData.desc"));
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag == 0) || ((tag & 7) == 4)) {
          CHK_(ptr);
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag,
            _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
            ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* ConsumMetaData::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:Protocol.ConsumMetaData)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // uint64 id = 1;
  if (this->id() != 0) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteUInt64ToArray(1, this->_internal_id(), target);
  }

  // string name = 2;
  if (!this->name().empty()) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_name().data(), static_cast<int>(this->_internal_name().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "Protocol.ConsumMetaData.name");
    target = stream->WriteStringMaybeAliased(
        2, this->_internal_name(), target);
  }

  // uint64 hp = 3;
  if (this->hp() != 0) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteUInt64ToArray(3, this->_internal_hp(), target);
  }

  // uint64 mp = 4;
  if (this->mp() != 0) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteUInt64ToArray(4, this->_internal_mp(), target);
  }

  // uint64 percentage = 5;
  if (this->percentage() != 0) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteUInt64ToArray(5, this->_internal_percentage(), target);
  }

  // uint64 price = 6;
  if (this->price() != 0) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteUInt64ToArray(6, this->_internal_price(), target);
  }

  // string resource = 7;
  if (!this->resource().empty()) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_resource().data(), static_cast<int>(this->_internal_resource().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "Protocol.ConsumMetaData.resource");
    target = stream->WriteStringMaybeAliased(
        7, this->_internal_resource(), target);
  }

  // string desc = 8;
  if (!this->desc().empty()) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_desc().data(), static_cast<int>(this->_internal_desc().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "Protocol.ConsumMetaData.desc");
    target = stream->WriteStringMaybeAliased(
        8, this->_internal_desc(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:Protocol.ConsumMetaData)
  return target;
}

size_t ConsumMetaData::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:Protocol.ConsumMetaData)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // string name = 2;
  if (!this->name().empty()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_name());
  }

  // string resource = 7;
  if (!this->resource().empty()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_resource());
  }

  // string desc = 8;
  if (!this->desc().empty()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_desc());
  }

  // uint64 id = 1;
  if (this->id() != 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::UInt64Size(
        this->_internal_id());
  }

  // uint64 hp = 3;
  if (this->hp() != 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::UInt64Size(
        this->_internal_hp());
  }

  // uint64 mp = 4;
  if (this->mp() != 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::UInt64Size(
        this->_internal_mp());
  }

  // uint64 percentage = 5;
  if (this->percentage() != 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::UInt64Size(
        this->_internal_percentage());
  }

  // uint64 price = 6;
  if (this->price() != 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::UInt64Size(
        this->_internal_price());
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void ConsumMetaData::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:Protocol.ConsumMetaData)
  GOOGLE_DCHECK_NE(&from, this);
  const ConsumMetaData* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<ConsumMetaData>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:Protocol.ConsumMetaData)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:Protocol.ConsumMetaData)
    MergeFrom(*source);
  }
}

void ConsumMetaData::MergeFrom(const ConsumMetaData& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:Protocol.ConsumMetaData)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (!from.name().empty()) {
    _internal_set_name(from._internal_name());
  }
  if (!from.resource().empty()) {
    _internal_set_resource(from._internal_resource());
  }
  if (!from.desc().empty()) {
    _internal_set_desc(from._internal_desc());
  }
  if (from.id() != 0) {
    _internal_set_id(from._internal_id());
  }
  if (from.hp() != 0) {
    _internal_set_hp(from._internal_hp());
  }
  if (from.mp() != 0) {
    _internal_set_mp(from._internal_mp());
  }
  if (from.percentage() != 0) {
    _internal_set_percentage(from._internal_percentage());
  }
  if (from.price() != 0) {
    _internal_set_price(from._internal_price());
  }
}

void ConsumMetaData::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:Protocol.ConsumMetaData)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void ConsumMetaData::CopyFrom(const ConsumMetaData& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:Protocol.ConsumMetaData)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool ConsumMetaData::IsInitialized() const {
  return true;
}

void ConsumMetaData::InternalSwap(ConsumMetaData* other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::InternalSwap(
      &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(),
      &name_, GetArenaForAllocation(),
      &other->name_, other->GetArenaForAllocation()
  );
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::InternalSwap(
      &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(),
      &resource_, GetArenaForAllocation(),
      &other->resource_, other->GetArenaForAllocation()
  );
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::InternalSwap(
      &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(),
      &desc_, GetArenaForAllocation(),
      &other->desc_, other->GetArenaForAllocation()
  );
  ::PROTOBUF_NAMESPACE_ID::internal::memswap<
      PROTOBUF_FIELD_OFFSET(ConsumMetaData, price_)
      + sizeof(ConsumMetaData::price_)
      - PROTOBUF_FIELD_OFFSET(ConsumMetaData, id_)>(
          reinterpret_cast<char*>(&id_),
          reinterpret_cast<char*>(&other->id_));
}

::PROTOBUF_NAMESPACE_ID::Metadata ConsumMetaData::GetMetadata() const {
  return ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(
      &descriptor_table_Struct_2eproto_getter, &descriptor_table_Struct_2eproto_once,
      file_level_metadata_Struct_2eproto[8]);
}

// ===================================================================

class EquipMetaData::_Internal {
 public:
};

EquipMetaData::EquipMetaData(::PROTOBUF_NAMESPACE_ID::Arena* arena)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena) {
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:Protocol.EquipMetaData)
}
EquipMetaData::EquipMetaData(const EquipMetaData& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  name_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (!from._internal_name().empty()) {
    name_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, from._internal_name(), 
      GetArenaForAllocation());
  }
  resource_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (!from._internal_resource().empty()) {
    resource_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, from._internal_resource(), 
      GetArenaForAllocation());
  }
  ::memcpy(&id_, &from.id_,
    static_cast<size_t>(reinterpret_cast<char*>(&equiptype_) -
    reinterpret_cast<char*>(&id_)) + sizeof(equiptype_));
  // @@protoc_insertion_point(copy_constructor:Protocol.EquipMetaData)
}

void EquipMetaData::SharedCtor() {
name_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
resource_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
::memset(reinterpret_cast<char*>(this) + static_cast<size_t>(
    reinterpret_cast<char*>(&id_) - reinterpret_cast<char*>(this)),
    0, static_cast<size_t>(reinterpret_cast<char*>(&equiptype_) -
    reinterpret_cast<char*>(&id_)) + sizeof(equiptype_));
}

EquipMetaData::~EquipMetaData() {
  // @@protoc_insertion_point(destructor:Protocol.EquipMetaData)
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

void EquipMetaData::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
  name_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  resource_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}

void EquipMetaData::ArenaDtor(void* object) {
  EquipMetaData* _this = reinterpret_cast< EquipMetaData* >(object);
  (void)_this;
}
void EquipMetaData::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void EquipMetaData::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}

void EquipMetaData::Clear() {
// @@protoc_insertion_point(message_clear_start:Protocol.EquipMetaData)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  name_.ClearToEmpty();
  resource_.ClearToEmpty();
  ::memset(&id_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&equiptype_) -
      reinterpret_cast<char*>(&id_)) + sizeof(equiptype_));
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* EquipMetaData::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // uint64 id = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 8)) {
          id_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // string name = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 18)) {
          auto str = _internal_mutable_name();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "Protocol.EquipMetaData.name"));
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // uint64 attack = 3;
      case 3:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 24)) {
          attack_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // uint64 defense = 4;
      case 4:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 32)) {
          defense_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // .Protocol.EquipType equiptype = 5;
      case 5:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 40)) {
          ::PROTOBUF_NAMESPACE_ID::uint64 val = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
          _internal_set_equiptype(static_cast<::Protocol::EquipType>(val));
        } else goto handle_unusual;
        continue;
      // uint64 percentage = 6;
      case 6:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 48)) {
          percentage_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // uint64 price = 7;
      case 7:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 56)) {
          price_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // string resource = 8;
      case 8:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 66)) {
          auto str = _internal_mutable_resource();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "Protocol.EquipMetaData.resource"));
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag == 0) || ((tag & 7) == 4)) {
          CHK_(ptr);
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag,
            _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
            ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* EquipMetaData::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:Protocol.EquipMetaData)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // uint64 id = 1;
  if (this->id() != 0) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteUInt64ToArray(1, this->_internal_id(), target);
  }

  // string name = 2;
  if (!this->name().empty()) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_name().data(), static_cast<int>(this->_internal_name().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "Protocol.EquipMetaData.name");
    target = stream->WriteStringMaybeAliased(
        2, this->_internal_name(), target);
  }

  // uint64 attack = 3;
  if (this->attack() != 0) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteUInt64ToArray(3, this->_internal_attack(), target);
  }

  // uint64 defense = 4;
  if (this->defense() != 0) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteUInt64ToArray(4, this->_internal_defense(), target);
  }

  // .Protocol.EquipType equiptype = 5;
  if (this->equiptype() != 0) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteEnumToArray(
      5, this->_internal_equiptype(), target);
  }

  // uint64 percentage = 6;
  if (this->percentage() != 0) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteUInt64ToArray(6, this->_internal_percentage(), target);
  }

  // uint64 price = 7;
  if (this->price() != 0) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteUInt64ToArray(7, this->_internal_price(), target);
  }

  // string resource = 8;
  if (!this->resource().empty()) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_resource().data(), static_cast<int>(this->_internal_resource().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "Protocol.EquipMetaData.resource");
    target = stream->WriteStringMaybeAliased(
        8, this->_internal_resource(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:Protocol.EquipMetaData)
  return target;
}

size_t EquipMetaData::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:Protocol.EquipMetaData)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // string name = 2;
  if (!this->name().empty()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_name());
  }

  // string resource = 8;
  if (!this->resource().empty()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_resource());
  }

  // uint64 id = 1;
  if (this->id() != 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::UInt64Size(
        this->_internal_id());
  }

  // uint64 attack = 3;
  if (this->attack() != 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::UInt64Size(
        this->_internal_attack());
  }

  // uint64 defense = 4;
  if (this->defense() != 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::UInt64Size(
        this->_internal_defense());
  }

  // uint64 percentage = 6;
  if (this->percentage() != 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::UInt64Size(
        this->_internal_percentage());
  }

  // uint64 price = 7;
  if (this->price() != 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::UInt64Size(
        this->_internal_price());
  }

  // .Protocol.EquipType equiptype = 5;
  if (this->equiptype() != 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::EnumSize(this->_internal_equiptype());
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void EquipMetaData::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:Protocol.EquipMetaData)
  GOOGLE_DCHECK_NE(&from, this);
  const EquipMetaData* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<EquipMetaData>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:Protocol.EquipMetaData)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:Protocol.EquipMetaData)
    MergeFrom(*source);
  }
}

void EquipMetaData::MergeFrom(const EquipMetaData& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:Protocol.EquipMetaData)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (!from.name().empty()) {
    _internal_set_name(from._internal_name());
  }
  if (!from.resource().empty()) {
    _internal_set_resource(from._internal_resource());
  }
  if (from.id() != 0) {
    _internal_set_id(from._internal_id());
  }
  if (from.attack() != 0) {
    _internal_set_attack(from._internal_attack());
  }
  if (from.defense() != 0) {
    _internal_set_defense(from._internal_defense());
  }
  if (from.percentage() != 0) {
    _internal_set_percentage(from._internal_percentage());
  }
  if (from.price() != 0) {
    _internal_set_price(from._internal_price());
  }
  if (from.equiptype() != 0) {
    _internal_set_equiptype(from._internal_equiptype());
  }
}

void EquipMetaData::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:Protocol.EquipMetaData)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void EquipMetaData::CopyFrom(const EquipMetaData& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:Protocol.EquipMetaData)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool EquipMetaData::IsInitialized() const {
  return true;
}

void EquipMetaData::InternalSwap(EquipMetaData* other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::InternalSwap(
      &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(),
      &name_, GetArenaForAllocation(),
      &other->name_, other->GetArenaForAllocation()
  );
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::InternalSwap(
      &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(),
      &resource_, GetArenaForAllocation(),
      &other->resource_, other->GetArenaForAllocation()
  );
  ::PROTOBUF_NAMESPACE_ID::internal::memswap<
      PROTOBUF_FIELD_OFFSET(EquipMetaData, equiptype_)
      + sizeof(EquipMetaData::equiptype_)
      - PROTOBUF_FIELD_OFFSET(EquipMetaData, id_)>(
          reinterpret_cast<char*>(&id_),
          reinterpret_cast<char*>(&other->id_));
}

::PROTOBUF_NAMESPACE_ID::Metadata EquipMetaData::GetMetadata() const {
  return ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(
      &descriptor_table_Struct_2eproto_getter, &descriptor_table_Struct_2eproto_once,
      file_level_metadata_Struct_2eproto[9]);
}

// ===================================================================

class NPCMetaData::_Internal {
 public:
};

NPCMetaData::NPCMetaData(::PROTOBUF_NAMESPACE_ID::Arena* arena)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena),
  ids_(arena) {
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:Protocol.NPCMetaData)
}
NPCMetaData::NPCMetaData(const NPCMetaData& from)
  : ::PROTOBUF_NAMESPACE_ID::Message(),
      ids_(from.ids_) {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  name_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (!from._internal_name().empty()) {
    name_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, from._internal_name(), 
      GetArenaForAllocation());
  }
  id_ = from.id_;
  // @@protoc_insertion_point(copy_constructor:Protocol.NPCMetaData)
}

void NPCMetaData::SharedCtor() {
name_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
id_ = uint64_t{0u};
}

NPCMetaData::~NPCMetaData() {
  // @@protoc_insertion_point(destructor:Protocol.NPCMetaData)
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

void NPCMetaData::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
  name_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}

void NPCMetaData::ArenaDtor(void* object) {
  NPCMetaData* _this = reinterpret_cast< NPCMetaData* >(object);
  (void)_this;
}
void NPCMetaData::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void NPCMetaData::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}

void NPCMetaData::Clear() {
// @@protoc_insertion_point(message_clear_start:Protocol.NPCMetaData)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  ids_.Clear();
  name_.ClearToEmpty();
  id_ = uint64_t{0u};
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* NPCMetaData::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // uint64 id = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 8)) {
          id_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // string name = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 18)) {
          auto str = _internal_mutable_name();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "Protocol.NPCMetaData.name"));
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // repeated uint64 ids = 3;
      case 3:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 26)) {
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::PackedUInt64Parser(_internal_mutable_ids(), ptr, ctx);
          CHK_(ptr);
        } else if (static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 24) {
          _internal_add_ids(::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr));
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag == 0) || ((tag & 7) == 4)) {
          CHK_(ptr);
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag,
            _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
            ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* NPCMetaData::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:Protocol.NPCMetaData)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // uint64 id = 1;
  if (this->id() != 0) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteUInt64ToArray(1, this->_internal_id(), target);
  }

  // string name = 2;
  if (!this->name().empty()) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_name().data(), static_cast<int>(this->_internal_name().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "Protocol.NPCMetaData.name");
    target = stream->WriteStringMaybeAliased(
        2, this->_internal_name(), target);
  }

  // repeated uint64 ids = 3;
  {
    int byte_size = _ids_cached_byte_size_.load(std::memory_order_relaxed);
    if (byte_size > 0) {
      target = stream->WriteUInt64Packed(
          3, _internal_ids(), byte_size, target);
    }
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:Protocol.NPCMetaData)
  return target;
}

size_t NPCMetaData::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:Protocol.NPCMetaData)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // repeated uint64 ids = 3;
  {
    size_t data_size = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      UInt64Size(this->ids_);
    if (data_size > 0) {
      total_size += 1 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::Int32Size(
            static_cast<::PROTOBUF_NAMESPACE_ID::int32>(data_size));
    }
    int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(data_size);
    _ids_cached_byte_size_.store(cached_size,
                                    std::memory_order_relaxed);
    total_size += data_size;
  }

  // string name = 2;
  if (!this->name().empty()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_name());
  }

  // uint64 id = 1;
  if (this->id() != 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::UInt64Size(
        this->_internal_id());
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void NPCMetaData::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:Protocol.NPCMetaData)
  GOOGLE_DCHECK_NE(&from, this);
  const NPCMetaData* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<NPCMetaData>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:Protocol.NPCMetaData)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:Protocol.NPCMetaData)
    MergeFrom(*source);
  }
}

void NPCMetaData::MergeFrom(const NPCMetaData& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:Protocol.NPCMetaData)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  ids_.MergeFrom(from.ids_);
  if (!from.name().empty()) {
    _internal_set_name(from._internal_name());
  }
  if (from.id() != 0) {
    _internal_set_id(from._internal_id());
  }
}

void NPCMetaData::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:Protocol.NPCMetaData)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void NPCMetaData::CopyFrom(const NPCMetaData& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:Protocol.NPCMetaData)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool NPCMetaData::IsInitialized() const {
  return true;
}

void NPCMetaData::InternalSwap(NPCMetaData* other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  ids_.InternalSwap(&other->ids_);
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::InternalSwap(
      &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(),
      &name_, GetArenaForAllocation(),
      &other->name_, other->GetArenaForAllocation()
  );
  swap(id_, other->id_);
}

::PROTOBUF_NAMESPACE_ID::Metadata NPCMetaData::GetMetadata() const {
  return ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(
      &descriptor_table_Struct_2eproto_getter, &descriptor_table_Struct_2eproto_once,
      file_level_metadata_Struct_2eproto[10]);
}

// ===================================================================

class ProjectileMetaData::_Internal {
 public:
  static const ::Protocol::PBVector& effectlocation(const ProjectileMetaData* msg);
  static const ::Protocol::PBVector& effectmeshlocation(const ProjectileMetaData* msg);
};

const ::Protocol::PBVector&
ProjectileMetaData::_Internal::effectlocation(const ProjectileMetaData* msg) {
  return *msg->effectlocation_;
}
const ::Protocol::PBVector&
ProjectileMetaData::_Internal::effectmeshlocation(const ProjectileMetaData* msg) {
  return *msg->effectmeshlocation_;
}
ProjectileMetaData::ProjectileMetaData(::PROTOBUF_NAMESPACE_ID::Arena* arena)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena) {
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:Protocol.ProjectileMetaData)
}
ProjectileMetaData::ProjectileMetaData(const ProjectileMetaData& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  resource_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (!from._internal_resource().empty()) {
    resource_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, from._internal_resource(), 
      GetArenaForAllocation());
  }
  resourcematerial_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (!from._internal_resourcematerial().empty()) {
    resourcematerial_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, from._internal_resourcematerial(), 
      GetArenaForAllocation());
  }
  effect_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (!from._internal_effect().empty()) {
    effect_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, from._internal_effect(), 
      GetArenaForAllocation());
  }
  effectmesh_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (!from._internal_effectmesh().empty()) {
    effectmesh_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, from._internal_effectmesh(), 
      GetArenaForAllocation());
  }
  effectmaterial_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (!from._internal_effectmaterial().empty()) {
    effectmaterial_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, from._internal_effectmaterial(), 
      GetArenaForAllocation());
  }
  explosioneffect_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (!from._internal_explosioneffect().empty()) {
    explosioneffect_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, from._internal_explosioneffect(), 
      GetArenaForAllocation());
  }
  if (from._internal_has_effectlocation()) {
    effectlocation_ = new ::Protocol::PBVector(*from.effectlocation_);
  } else {
    effectlocation_ = nullptr;
  }
  if (from._internal_has_effectmeshlocation()) {
    effectmeshlocation_ = new ::Protocol::PBVector(*from.effectmeshlocation_);
  } else {
    effectmeshlocation_ = nullptr;
  }
  ::memcpy(&id_, &from.id_,
    static_cast<size_t>(reinterpret_cast<char*>(&effectmeshscale_) -
    reinterpret_cast<char*>(&id_)) + sizeof(effectmeshscale_));
  // @@protoc_insertion_point(copy_constructor:Protocol.ProjectileMetaData)
}

void ProjectileMetaData::SharedCtor() {
resource_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
resourcematerial_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
effect_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
effectmesh_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
effectmaterial_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
explosioneffect_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
::memset(reinterpret_cast<char*>(this) + static_cast<size_t>(
    reinterpret_cast<char*>(&effectlocation_) - reinterpret_cast<char*>(this)),
    0, static_cast<size_t>(reinterpret_cast<char*>(&effectmeshscale_) -
    reinterpret_cast<char*>(&effectlocation_)) + sizeof(effectmeshscale_));
}

ProjectileMetaData::~ProjectileMetaData() {
  // @@protoc_insertion_point(destructor:Protocol.ProjectileMetaData)
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

void ProjectileMetaData::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
  resource_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  resourcematerial_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  effect_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  effectmesh_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  effectmaterial_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  explosioneffect_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (this != internal_default_instance()) delete effectlocation_;
  if (this != internal_default_instance()) delete effectmeshlocation_;
}

void ProjectileMetaData::ArenaDtor(void* object) {
  ProjectileMetaData* _this = reinterpret_cast< ProjectileMetaData* >(object);
  (void)_this;
}
void ProjectileMetaData::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void ProjectileMetaData::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}

void ProjectileMetaData::Clear() {
// @@protoc_insertion_point(message_clear_start:Protocol.ProjectileMetaData)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  resource_.ClearToEmpty();
  resourcematerial_.ClearToEmpty();
  effect_.ClearToEmpty();
  effectmesh_.ClearToEmpty();
  effectmaterial_.ClearToEmpty();
  explosioneffect_.ClearToEmpty();
  if (GetArenaForAllocation() == nullptr && effectlocation_ != nullptr) {
    delete effectlocation_;
  }
  effectlocation_ = nullptr;
  if (GetArenaForAllocation() == nullptr && effectmeshlocation_ != nullptr) {
    delete effectmeshlocation_;
  }
  effectmeshlocation_ = nullptr;
  ::memset(&id_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&effectmeshscale_) -
      reinterpret_cast<char*>(&id_)) + sizeof(effectmeshscale_));
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* ProjectileMetaData::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // uint64 id = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 8)) {
          id_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // uint64 damage = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 16)) {
          damage_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // uint64 speed = 3;
      case 3:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 24)) {
          speed_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // float size = 4;
      case 4:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 37)) {
          size_ = ::PROTOBUF_NAMESPACE_ID::internal::UnalignedLoad<float>(ptr);
          ptr += sizeof(float);
        } else goto handle_unusual;
        continue;
      // float scale = 5;
      case 5:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 45)) {
          scale_ = ::PROTOBUF_NAMESPACE_ID::internal::UnalignedLoad<float>(ptr);
          ptr += sizeof(float);
        } else goto handle_unusual;
        continue;
      // uint64 duration = 6;
      case 6:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 48)) {
          duration_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // uint64 limitDistance = 7;
      case 7:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 56)) {
          limitdistance_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // uint64 childProjectileId = 8;
      case 8:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 64)) {
          childprojectileid_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // string resource = 9;
      case 9:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 74)) {
          auto str = _internal_mutable_resource();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "Protocol.ProjectileMetaData.resource"));
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // string resourceMaterial = 10;
      case 10:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 82)) {
          auto str = _internal_mutable_resourcematerial();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "Protocol.ProjectileMetaData.resourceMaterial"));
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // string effect = 11;
      case 11:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 90)) {
          auto str = _internal_mutable_effect();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "Protocol.ProjectileMetaData.effect"));
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // .Protocol.PBVector effectLocation = 12;
      case 12:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 98)) {
          ptr = ctx->ParseMessage(_internal_mutable_effectlocation(), ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // float effectScale = 13;
      case 13:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 109)) {
          effectscale_ = ::PROTOBUF_NAMESPACE_ID::internal::UnalignedLoad<float>(ptr);
          ptr += sizeof(float);
        } else goto handle_unusual;
        continue;
      // string effectMesh = 14;
      case 14:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 114)) {
          auto str = _internal_mutable_effectmesh();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "Protocol.ProjectileMetaData.effectMesh"));
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // string effectMaterial = 15;
      case 15:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 122)) {
          auto str = _internal_mutable_effectmaterial();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "Protocol.ProjectileMetaData.effectMaterial"));
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // .Protocol.PBVector effectMeshLocation = 16;
      case 16:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 130)) {
          ptr = ctx->ParseMessage(_internal_mutable_effectmeshlocation(), ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // float effectMeshScale = 17;
      case 17:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 141)) {
          effectmeshscale_ = ::PROTOBUF_NAMESPACE_ID::internal::UnalignedLoad<float>(ptr);
          ptr += sizeof(float);
        } else goto handle_unusual;
        continue;
      // string explosionEffect = 18;
      case 18:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 146)) {
          auto str = _internal_mutable_explosioneffect();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "Protocol.ProjectileMetaData.explosionEffect"));
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag == 0) || ((tag & 7) == 4)) {
          CHK_(ptr);
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag,
            _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
            ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* ProjectileMetaData::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:Protocol.ProjectileMetaData)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // uint64 id = 1;
  if (this->id() != 0) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteUInt64ToArray(1, this->_internal_id(), target);
  }

  // uint64 damage = 2;
  if (this->damage() != 0) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteUInt64ToArray(2, this->_internal_damage(), target);
  }

  // uint64 speed = 3;
  if (this->speed() != 0) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteUInt64ToArray(3, this->_internal_speed(), target);
  }

  // float size = 4;
  if (!(this->size() <= 0 && this->size() >= 0)) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteFloatToArray(4, this->_internal_size(), target);
  }

  // float scale = 5;
  if (!(this->scale() <= 0 && this->scale() >= 0)) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteFloatToArray(5, this->_internal_scale(), target);
  }

  // uint64 duration = 6;
  if (this->duration() != 0) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteUInt64ToArray(6, this->_internal_duration(), target);
  }

  // uint64 limitDistance = 7;
  if (this->limitdistance() != 0) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteUInt64ToArray(7, this->_internal_limitdistance(), target);
  }

  // uint64 childProjectileId = 8;
  if (this->childprojectileid() != 0) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteUInt64ToArray(8, this->_internal_childprojectileid(), target);
  }

  // string resource = 9;
  if (!this->resource().empty()) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_resource().data(), static_cast<int>(this->_internal_resource().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "Protocol.ProjectileMetaData.resource");
    target = stream->WriteStringMaybeAliased(
        9, this->_internal_resource(), target);
  }

  // string resourceMaterial = 10;
  if (!this->resourcematerial().empty()) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_resourcematerial().data(), static_cast<int>(this->_internal_resourcematerial().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "Protocol.ProjectileMetaData.resourceMaterial");
    target = stream->WriteStringMaybeAliased(
        10, this->_internal_resourcematerial(), target);
  }

  // string effect = 11;
  if (!this->effect().empty()) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_effect().data(), static_cast<int>(this->_internal_effect().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "Protocol.ProjectileMetaData.effect");
    target = stream->WriteStringMaybeAliased(
        11, this->_internal_effect(), target);
  }

  // .Protocol.PBVector effectLocation = 12;
  if (this->has_effectlocation()) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(
        12, _Internal::effectlocation(this), target, stream);
  }

  // float effectScale = 13;
  if (!(this->effectscale() <= 0 && this->effectscale() >= 0)) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteFloatToArray(13, this->_internal_effectscale(), target);
  }

  // string effectMesh = 14;
  if (!this->effectmesh().empty()) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_effectmesh().data(), static_cast<int>(this->_internal_effectmesh().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "Protocol.ProjectileMetaData.effectMesh");
    target = stream->WriteStringMaybeAliased(
        14, this->_internal_effectmesh(), target);
  }

  // string effectMaterial = 15;
  if (!this->effectmaterial().empty()) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_effectmaterial().data(), static_cast<int>(this->_internal_effectmaterial().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "Protocol.ProjectileMetaData.effectMaterial");
    target = stream->WriteStringMaybeAliased(
        15, this->_internal_effectmaterial(), target);
  }

  // .Protocol.PBVector effectMeshLocation = 16;
  if (this->has_effectmeshlocation()) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(
        16, _Internal::effectmeshlocation(this), target, stream);
  }

  // float effectMeshScale = 17;
  if (!(this->effectmeshscale() <= 0 && this->effectmeshscale() >= 0)) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteFloatToArray(17, this->_internal_effectmeshscale(), target);
  }

  // string explosionEffect = 18;
  if (!this->explosioneffect().empty()) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_explosioneffect().data(), static_cast<int>(this->_internal_explosioneffect().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "Protocol.ProjectileMetaData.explosionEffect");
    target = stream->WriteStringMaybeAliased(
        18, this->_internal_explosioneffect(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:Protocol.ProjectileMetaData)
  return target;
}

size_t ProjectileMetaData::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:Protocol.ProjectileMetaData)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // string resource = 9;
  if (!this->resource().empty()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_resource());
  }

  // string resourceMaterial = 10;
  if (!this->resourcematerial().empty()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_resourcematerial());
  }

  // string effect = 11;
  if (!this->effect().empty()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_effect());
  }

  // string effectMesh = 14;
  if (!this->effectmesh().empty()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_effectmesh());
  }

  // string effectMaterial = 15;
  if (!this->effectmaterial().empty()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_effectmaterial());
  }

  // string explosionEffect = 18;
  if (!this->explosioneffect().empty()) {
    total_size += 2 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_explosioneffect());
  }

  // .Protocol.PBVector effectLocation = 12;
  if (this->has_effectlocation()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
        *effectlocation_);
  }

  // .Protocol.PBVector effectMeshLocation = 16;
  if (this->has_effectmeshlocation()) {
    total_size += 2 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
        *effectmeshlocation_);
  }

  // uint64 id = 1;
  if (this->id() != 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::UInt64Size(
        this->_internal_id());
  }

  // uint64 damage = 2;
  if (this->damage() != 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::UInt64Size(
        this->_internal_damage());
  }

  // uint64 speed = 3;
  if (this->speed() != 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::UInt64Size(
        this->_internal_speed());
  }

  // float size = 4;
  if (!(this->size() <= 0 && this->size() >= 0)) {
    total_size += 1 + 4;
  }

  // float scale = 5;
  if (!(this->scale() <= 0 && this->scale() >= 0)) {
    total_size += 1 + 4;
  }

  // uint64 duration = 6;
  if (this->duration() != 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::UInt64Size(
        this->_internal_duration());
  }

  // uint64 limitDistance = 7;
  if (this->limitdistance() != 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::UInt64Size(
        this->_internal_limitdistance());
  }

  // uint64 childProjectileId = 8;
  if (this->childprojectileid() != 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::UInt64Size(
        this->_internal_childprojectileid());
  }

  // float effectScale = 13;
  if (!(this->effectscale() <= 0 && this->effectscale() >= 0)) {
    total_size += 1 + 4;
  }

  // float effectMeshScale = 17;
  if (!(this->effectmeshscale() <= 0 && this->effectmeshscale() >= 0)) {
    total_size += 2 + 4;
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void ProjectileMetaData::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:Protocol.ProjectileMetaData)
  GOOGLE_DCHECK_NE(&from, this);
  const ProjectileMetaData* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<ProjectileMetaData>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:Protocol.ProjectileMetaData)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:Protocol.ProjectileMetaData)
    MergeFrom(*source);
  }
}

void ProjectileMetaData::MergeFrom(const ProjectileMetaData& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:Protocol.ProjectileMetaData)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (!from.resource().empty()) {
    _internal_set_resource(from._internal_resource());
  }
  if (!from.resourcematerial().empty()) {
    _internal_set_resourcematerial(from._internal_resourcematerial());
  }
  if (!from.effect().empty()) {
    _internal_set_effect(from._internal_effect());
  }
  if (!from.effectmesh().empty()) {
    _internal_set_effectmesh(from._internal_effectmesh());
  }
  if (!from.effectmaterial().empty()) {
    _internal_set_effectmaterial(from._internal_effectmaterial());
  }
  if (!from.explosioneffect().empty()) {
    _internal_set_explosioneffect(from._internal_explosioneffect());
  }
  if (from.has_effectlocation()) {
    _internal_mutable_effectlocation()->::Protocol::PBVector::MergeFrom(from._internal_effectlocation());
  }
  if (from.has_effectmeshlocation()) {
    _internal_mutable_effectmeshlocation()->::Protocol::PBVector::MergeFrom(from._internal_effectmeshlocation());
  }
  if (from.id() != 0) {
    _internal_set_id(from._internal_id());
  }
  if (from.damage() != 0) {
    _internal_set_damage(from._internal_damage());
  }
  if (from.speed() != 0) {
    _internal_set_speed(from._internal_speed());
  }
  if (!(from.size() <= 0 && from.size() >= 0)) {
    _internal_set_size(from._internal_size());
  }
  if (!(from.scale() <= 0 && from.scale() >= 0)) {
    _internal_set_scale(from._internal_scale());
  }
  if (from.duration() != 0) {
    _internal_set_duration(from._internal_duration());
  }
  if (from.limitdistance() != 0) {
    _internal_set_limitdistance(from._internal_limitdistance());
  }
  if (from.childprojectileid() != 0) {
    _internal_set_childprojectileid(from._internal_childprojectileid());
  }
  if (!(from.effectscale() <= 0 && from.effectscale() >= 0)) {
    _internal_set_effectscale(from._internal_effectscale());
  }
  if (!(from.effectmeshscale() <= 0 && from.effectmeshscale() >= 0)) {
    _internal_set_effectmeshscale(from._internal_effectmeshscale());
  }
}

void ProjectileMetaData::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:Protocol.ProjectileMetaData)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void ProjectileMetaData::CopyFrom(const ProjectileMetaData& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:Protocol.ProjectileMetaData)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool ProjectileMetaData::IsInitialized() const {
  return true;
}

void ProjectileMetaData::InternalSwap(ProjectileMetaData* other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::InternalSwap(
      &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(),
      &resource_, GetArenaForAllocation(),
      &other->resource_, other->GetArenaForAllocation()
  );
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::InternalSwap(
      &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(),
      &resourcematerial_, GetArenaForAllocation(),
      &other->resourcematerial_, other->GetArenaForAllocation()
  );
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::InternalSwap(
      &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(),
      &effect_, GetArenaForAllocation(),
      &other->effect_, other->GetArenaForAllocation()
  );
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::InternalSwap(
      &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(),
      &effectmesh_, GetArenaForAllocation(),
      &other->effectmesh_, other->GetArenaForAllocation()
  );
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::InternalSwap(
      &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(),
      &effectmaterial_, GetArenaForAllocation(),
      &other->effectmaterial_, other->GetArenaForAllocation()
  );
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::InternalSwap(
      &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(),
      &explosioneffect_, GetArenaForAllocation(),
      &other->explosioneffect_, other->GetArenaForAllocation()
  );
  ::PROTOBUF_NAMESPACE_ID::internal::memswap<
      PROTOBUF_FIELD_OFFSET(ProjectileMetaData, effectmeshscale_)
      + sizeof(ProjectileMetaData::effectmeshscale_)
      - PROTOBUF_FIELD_OFFSET(ProjectileMetaData, effectlocation_)>(
          reinterpret_cast<char*>(&effectlocation_),
          reinterpret_cast<char*>(&other->effectlocation_));
}

::PROTOBUF_NAMESPACE_ID::Metadata ProjectileMetaData::GetMetadata() const {
  return ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(
      &descriptor_table_Struct_2eproto_getter, &descriptor_table_Struct_2eproto_once,
      file_level_metadata_Struct_2eproto[11]);
}

// ===================================================================

class SummonsMetaData::_Internal {
 public:
  static const ::Protocol::StatMetaData& stat(const SummonsMetaData* msg);
};

const ::Protocol::StatMetaData&
SummonsMetaData::_Internal::stat(const SummonsMetaData* msg) {
  return *msg->stat_;
}
SummonsMetaData::SummonsMetaData(::PROTOBUF_NAMESPACE_ID::Arena* arena)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena) {
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:Protocol.SummonsMetaData)
}
SummonsMetaData::SummonsMetaData(const SummonsMetaData& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  resource_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (!from._internal_resource().empty()) {
    resource_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, from._internal_resource(), 
      GetArenaForAllocation());
  }
  anim_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (!from._internal_anim().empty()) {
    anim_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, from._internal_anim(), 
      GetArenaForAllocation());
  }
  if (from._internal_has_stat()) {
    stat_ = new ::Protocol::StatMetaData(*from.stat_);
  } else {
    stat_ = nullptr;
  }
  ::memcpy(&id_, &from.id_,
    static_cast<size_t>(reinterpret_cast<char*>(&attrange_) -
    reinterpret_cast<char*>(&id_)) + sizeof(attrange_));
  // @@protoc_insertion_point(copy_constructor:Protocol.SummonsMetaData)
}

void SummonsMetaData::SharedCtor() {
resource_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
anim_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
::memset(reinterpret_cast<char*>(this) + static_cast<size_t>(
    reinterpret_cast<char*>(&stat_) - reinterpret_cast<char*>(this)),
    0, static_cast<size_t>(reinterpret_cast<char*>(&attrange_) -
    reinterpret_cast<char*>(&stat_)) + sizeof(attrange_));
}

SummonsMetaData::~SummonsMetaData() {
  // @@protoc_insertion_point(destructor:Protocol.SummonsMetaData)
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

void SummonsMetaData::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
  resource_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  anim_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (this != internal_default_instance()) delete stat_;
}

void SummonsMetaData::ArenaDtor(void* object) {
  SummonsMetaData* _this = reinterpret_cast< SummonsMetaData* >(object);
  (void)_this;
}
void SummonsMetaData::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void SummonsMetaData::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}

void SummonsMetaData::Clear() {
// @@protoc_insertion_point(message_clear_start:Protocol.SummonsMetaData)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  resource_.ClearToEmpty();
  anim_.ClearToEmpty();
  if (GetArenaForAllocation() == nullptr && stat_ != nullptr) {
    delete stat_;
  }
  stat_ = nullptr;
  ::memset(&id_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&attrange_) -
      reinterpret_cast<char*>(&id_)) + sizeof(attrange_));
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* SummonsMetaData::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // uint64 id = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 8)) {
          id_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // uint64 skillId = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 16)) {
          skillid_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // uint64 duration = 3;
      case 3:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 24)) {
          duration_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // string resource = 4;
      case 4:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 34)) {
          auto str = _internal_mutable_resource();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "Protocol.SummonsMetaData.resource"));
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // string anim = 5;
      case 5:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 42)) {
          auto str = _internal_mutable_anim();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "Protocol.SummonsMetaData.anim"));
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // .Protocol.StatMetaData stat = 6;
      case 6:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 50)) {
          ptr = ctx->ParseMessage(_internal_mutable_stat(), ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // uint64 detectrange = 7;
      case 7:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 56)) {
          detectrange_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // uint64 attrange = 8;
      case 8:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 64)) {
          attrange_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag == 0) || ((tag & 7) == 4)) {
          CHK_(ptr);
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag,
            _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
            ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* SummonsMetaData::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:Protocol.SummonsMetaData)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // uint64 id = 1;
  if (this->id() != 0) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteUInt64ToArray(1, this->_internal_id(), target);
  }

  // uint64 skillId = 2;
  if (this->skillid() != 0) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteUInt64ToArray(2, this->_internal_skillid(), target);
  }

  // uint64 duration = 3;
  if (this->duration() != 0) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteUInt64ToArray(3, this->_internal_duration(), target);
  }

  // string resource = 4;
  if (!this->resource().empty()) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_resource().data(), static_cast<int>(this->_internal_resource().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "Protocol.SummonsMetaData.resource");
    target = stream->WriteStringMaybeAliased(
        4, this->_internal_resource(), target);
  }

  // string anim = 5;
  if (!this->anim().empty()) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_anim().data(), static_cast<int>(this->_internal_anim().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "Protocol.SummonsMetaData.anim");
    target = stream->WriteStringMaybeAliased(
        5, this->_internal_anim(), target);
  }

  // .Protocol.StatMetaData stat = 6;
  if (this->has_stat()) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(
        6, _Internal::stat(this), target, stream);
  }

  // uint64 detectrange = 7;
  if (this->detectrange() != 0) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteUInt64ToArray(7, this->_internal_detectrange(), target);
  }

  // uint64 attrange = 8;
  if (this->attrange() != 0) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteUInt64ToArray(8, this->_internal_attrange(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:Protocol.SummonsMetaData)
  return target;
}

size_t SummonsMetaData::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:Protocol.SummonsMetaData)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // string resource = 4;
  if (!this->resource().empty()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_resource());
  }

  // string anim = 5;
  if (!this->anim().empty()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_anim());
  }

  // .Protocol.StatMetaData stat = 6;
  if (this->has_stat()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
        *stat_);
  }

  // uint64 id = 1;
  if (this->id() != 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::UInt64Size(
        this->_internal_id());
  }

  // uint64 skillId = 2;
  if (this->skillid() != 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::UInt64Size(
        this->_internal_skillid());
  }

  // uint64 duration = 3;
  if (this->duration() != 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::UInt64Size(
        this->_internal_duration());
  }

  // uint64 detectrange = 7;
  if (this->detectrange() != 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::UInt64Size(
        this->_internal_detectrange());
  }

  // uint64 attrange = 8;
  if (this->attrange() != 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::UInt64Size(
        this->_internal_attrange());
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void SummonsMetaData::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:Protocol.SummonsMetaData)
  GOOGLE_DCHECK_NE(&from, this);
  const SummonsMetaData* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<SummonsMetaData>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:Protocol.SummonsMetaData)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:Protocol.SummonsMetaData)
    MergeFrom(*source);
  }
}

void SummonsMetaData::MergeFrom(const SummonsMetaData& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:Protocol.SummonsMetaData)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (!from.resource().empty()) {
    _internal_set_resource(from._internal_resource());
  }
  if (!from.anim().empty()) {
    _internal_set_anim(from._internal_anim());
  }
  if (from.has_stat()) {
    _internal_mutable_stat()->::Protocol::StatMetaData::MergeFrom(from._internal_stat());
  }
  if (from.id() != 0) {
    _internal_set_id(from._internal_id());
  }
  if (from.skillid() != 0) {
    _internal_set_skillid(from._internal_skillid());
  }
  if (from.duration() != 0) {
    _internal_set_duration(from._internal_duration());
  }
  if (from.detectrange() != 0) {
    _internal_set_detectrange(from._internal_detectrange());
  }
  if (from.attrange() != 0) {
    _internal_set_attrange(from._internal_attrange());
  }
}

void SummonsMetaData::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:Protocol.SummonsMetaData)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void SummonsMetaData::CopyFrom(const SummonsMetaData& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:Protocol.SummonsMetaData)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool SummonsMetaData::IsInitialized() const {
  return true;
}

void SummonsMetaData::InternalSwap(SummonsMetaData* other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::InternalSwap(
      &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(),
      &resource_, GetArenaForAllocation(),
      &other->resource_, other->GetArenaForAllocation()
  );
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::InternalSwap(
      &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(),
      &anim_, GetArenaForAllocation(),
      &other->anim_, other->GetArenaForAllocation()
  );
  ::PROTOBUF_NAMESPACE_ID::internal::memswap<
      PROTOBUF_FIELD_OFFSET(SummonsMetaData, attrange_)
      + sizeof(SummonsMetaData::attrange_)
      - PROTOBUF_FIELD_OFFSET(SummonsMetaData, stat_)>(
          reinterpret_cast<char*>(&stat_),
          reinterpret_cast<char*>(&other->stat_));
}

::PROTOBUF_NAMESPACE_ID::Metadata SummonsMetaData::GetMetadata() const {
  return ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(
      &descriptor_table_Struct_2eproto_getter, &descriptor_table_Struct_2eproto_once,
      file_level_metadata_Struct_2eproto[12]);
}

// ===================================================================

class EnemyMetaData::_Internal {
 public:
  static const ::Protocol::StatMetaData& stat(const EnemyMetaData* msg);
};

const ::Protocol::StatMetaData&
EnemyMetaData::_Internal::stat(const EnemyMetaData* msg) {
  return *msg->stat_;
}
EnemyMetaData::EnemyMetaData(::PROTOBUF_NAMESPACE_ID::Arena* arena)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena) {
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:Protocol.EnemyMetaData)
}
EnemyMetaData::EnemyMetaData(const EnemyMetaData& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  resource_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (!from._internal_resource().empty()) {
    resource_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, from._internal_resource(), 
      GetArenaForAllocation());
  }
  anim_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (!from._internal_anim().empty()) {
    anim_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, from._internal_anim(), 
      GetArenaForAllocation());
  }
  if (from._internal_has_stat()) {
    stat_ = new ::Protocol::StatMetaData(*from.stat_);
  } else {
    stat_ = nullptr;
  }
  ::memcpy(&id_, &from.id_,
    static_cast<size_t>(reinterpret_cast<char*>(&attrange_) -
    reinterpret_cast<char*>(&id_)) + sizeof(attrange_));
  // @@protoc_insertion_point(copy_constructor:Protocol.EnemyMetaData)
}

void EnemyMetaData::SharedCtor() {
resource_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
anim_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
::memset(reinterpret_cast<char*>(this) + static_cast<size_t>(
    reinterpret_cast<char*>(&stat_) - reinterpret_cast<char*>(this)),
    0, static_cast<size_t>(reinterpret_cast<char*>(&attrange_) -
    reinterpret_cast<char*>(&stat_)) + sizeof(attrange_));
}

EnemyMetaData::~EnemyMetaData() {
  // @@protoc_insertion_point(destructor:Protocol.EnemyMetaData)
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

void EnemyMetaData::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
  resource_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  anim_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (this != internal_default_instance()) delete stat_;
}

void EnemyMetaData::ArenaDtor(void* object) {
  EnemyMetaData* _this = reinterpret_cast< EnemyMetaData* >(object);
  (void)_this;
}
void EnemyMetaData::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void EnemyMetaData::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}

void EnemyMetaData::Clear() {
// @@protoc_insertion_point(message_clear_start:Protocol.EnemyMetaData)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  resource_.ClearToEmpty();
  anim_.ClearToEmpty();
  if (GetArenaForAllocation() == nullptr && stat_ != nullptr) {
    delete stat_;
  }
  stat_ = nullptr;
  ::memset(&id_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&attrange_) -
      reinterpret_cast<char*>(&id_)) + sizeof(attrange_));
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* EnemyMetaData::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // uint64 id = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 8)) {
          id_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // uint64 skillId = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 16)) {
          skillid_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // string resource = 3;
      case 3:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 26)) {
          auto str = _internal_mutable_resource();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "Protocol.EnemyMetaData.resource"));
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // string anim = 4;
      case 4:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 34)) {
          auto str = _internal_mutable_anim();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "Protocol.EnemyMetaData.anim"));
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // .Protocol.StatMetaData stat = 5;
      case 5:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 42)) {
          ptr = ctx->ParseMessage(_internal_mutable_stat(), ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // uint64 detectrange = 7;
      case 7:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 56)) {
          detectrange_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // uint64 attrange = 8;
      case 8:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 64)) {
          attrange_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag == 0) || ((tag & 7) == 4)) {
          CHK_(ptr);
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag,
            _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
            ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* EnemyMetaData::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:Protocol.EnemyMetaData)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // uint64 id = 1;
  if (this->id() != 0) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteUInt64ToArray(1, this->_internal_id(), target);
  }

  // uint64 skillId = 2;
  if (this->skillid() != 0) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteUInt64ToArray(2, this->_internal_skillid(), target);
  }

  // string resource = 3;
  if (!this->resource().empty()) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_resource().data(), static_cast<int>(this->_internal_resource().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "Protocol.EnemyMetaData.resource");
    target = stream->WriteStringMaybeAliased(
        3, this->_internal_resource(), target);
  }

  // string anim = 4;
  if (!this->anim().empty()) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_anim().data(), static_cast<int>(this->_internal_anim().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "Protocol.EnemyMetaData.anim");
    target = stream->WriteStringMaybeAliased(
        4, this->_internal_anim(), target);
  }

  // .Protocol.StatMetaData stat = 5;
  if (this->has_stat()) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(
        5, _Internal::stat(this), target, stream);
  }

  // uint64 detectrange = 7;
  if (this->detectrange() != 0) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteUInt64ToArray(7, this->_internal_detectrange(), target);
  }

  // uint64 attrange = 8;
  if (this->attrange() != 0) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteUInt64ToArray(8, this->_internal_attrange(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:Protocol.EnemyMetaData)
  return target;
}

size_t EnemyMetaData::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:Protocol.EnemyMetaData)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // string resource = 3;
  if (!this->resource().empty()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_resource());
  }

  // string anim = 4;
  if (!this->anim().empty()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_anim());
  }

  // .Protocol.StatMetaData stat = 5;
  if (this->has_stat()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
        *stat_);
  }

  // uint64 id = 1;
  if (this->id() != 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::UInt64Size(
        this->_internal_id());
  }

  // uint64 skillId = 2;
  if (this->skillid() != 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::UInt64Size(
        this->_internal_skillid());
  }

  // uint64 detectrange = 7;
  if (this->detectrange() != 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::UInt64Size(
        this->_internal_detectrange());
  }

  // uint64 attrange = 8;
  if (this->attrange() != 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::UInt64Size(
        this->_internal_attrange());
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void EnemyMetaData::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:Protocol.EnemyMetaData)
  GOOGLE_DCHECK_NE(&from, this);
  const EnemyMetaData* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<EnemyMetaData>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:Protocol.EnemyMetaData)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:Protocol.EnemyMetaData)
    MergeFrom(*source);
  }
}

void EnemyMetaData::MergeFrom(const EnemyMetaData& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:Protocol.EnemyMetaData)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (!from.resource().empty()) {
    _internal_set_resource(from._internal_resource());
  }
  if (!from.anim().empty()) {
    _internal_set_anim(from._internal_anim());
  }
  if (from.has_stat()) {
    _internal_mutable_stat()->::Protocol::StatMetaData::MergeFrom(from._internal_stat());
  }
  if (from.id() != 0) {
    _internal_set_id(from._internal_id());
  }
  if (from.skillid() != 0) {
    _internal_set_skillid(from._internal_skillid());
  }
  if (from.detectrange() != 0) {
    _internal_set_detectrange(from._internal_detectrange());
  }
  if (from.attrange() != 0) {
    _internal_set_attrange(from._internal_attrange());
  }
}

void EnemyMetaData::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:Protocol.EnemyMetaData)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void EnemyMetaData::CopyFrom(const EnemyMetaData& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:Protocol.EnemyMetaData)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool EnemyMetaData::IsInitialized() const {
  return true;
}

void EnemyMetaData::InternalSwap(EnemyMetaData* other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::InternalSwap(
      &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(),
      &resource_, GetArenaForAllocation(),
      &other->resource_, other->GetArenaForAllocation()
  );
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::InternalSwap(
      &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(),
      &anim_, GetArenaForAllocation(),
      &other->anim_, other->GetArenaForAllocation()
  );
  ::PROTOBUF_NAMESPACE_ID::internal::memswap<
      PROTOBUF_FIELD_OFFSET(EnemyMetaData, attrange_)
      + sizeof(EnemyMetaData::attrange_)
      - PROTOBUF_FIELD_OFFSET(EnemyMetaData, stat_)>(
          reinterpret_cast<char*>(&stat_),
          reinterpret_cast<char*>(&other->stat_));
}

::PROTOBUF_NAMESPACE_ID::Metadata EnemyMetaData::GetMetadata() const {
  return ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(
      &descriptor_table_Struct_2eproto_getter, &descriptor_table_Struct_2eproto_once,
      file_level_metadata_Struct_2eproto[13]);
}

// ===================================================================

class StatMetaData::_Internal {
 public:
};

StatMetaData::StatMetaData(::PROTOBUF_NAMESPACE_ID::Arena* arena)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena) {
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:Protocol.StatMetaData)
}
StatMetaData::StatMetaData(const StatMetaData& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::memcpy(&hp_, &from.hp_,
    static_cast<size_t>(reinterpret_cast<char*>(&maxexp_) -
    reinterpret_cast<char*>(&hp_)) + sizeof(maxexp_));
  // @@protoc_insertion_point(copy_constructor:Protocol.StatMetaData)
}

void StatMetaData::SharedCtor() {
::memset(reinterpret_cast<char*>(this) + static_cast<size_t>(
    reinterpret_cast<char*>(&hp_) - reinterpret_cast<char*>(this)),
    0, static_cast<size_t>(reinterpret_cast<char*>(&maxexp_) -
    reinterpret_cast<char*>(&hp_)) + sizeof(maxexp_));
}

StatMetaData::~StatMetaData() {
  // @@protoc_insertion_point(destructor:Protocol.StatMetaData)
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

void StatMetaData::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
}

void StatMetaData::ArenaDtor(void* object) {
  StatMetaData* _this = reinterpret_cast< StatMetaData* >(object);
  (void)_this;
}
void StatMetaData::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void StatMetaData::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}

void StatMetaData::Clear() {
// @@protoc_insertion_point(message_clear_start:Protocol.StatMetaData)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  ::memset(&hp_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&maxexp_) -
      reinterpret_cast<char*>(&hp_)) + sizeof(maxexp_));
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* StatMetaData::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // uint64 hp = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 8)) {
          hp_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // uint64 mp = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 16)) {
          mp_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // uint64 exp = 3;
      case 3:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 24)) {
          exp_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // uint64 maxhp = 4;
      case 4:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 32)) {
          maxhp_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // uint64 maxmp = 5;
      case 5:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 40)) {
          maxmp_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // uint64 maxexp = 6;
      case 6:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 48)) {
          maxexp_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag == 0) || ((tag & 7) == 4)) {
          CHK_(ptr);
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag,
            _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
            ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* StatMetaData::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:Protocol.StatMetaData)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // uint64 hp = 1;
  if (this->hp() != 0) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteUInt64ToArray(1, this->_internal_hp(), target);
  }

  // uint64 mp = 2;
  if (this->mp() != 0) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteUInt64ToArray(2, this->_internal_mp(), target);
  }

  // uint64 exp = 3;
  if (this->exp() != 0) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteUInt64ToArray(3, this->_internal_exp(), target);
  }

  // uint64 maxhp = 4;
  if (this->maxhp() != 0) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteUInt64ToArray(4, this->_internal_maxhp(), target);
  }

  // uint64 maxmp = 5;
  if (this->maxmp() != 0) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteUInt64ToArray(5, this->_internal_maxmp(), target);
  }

  // uint64 maxexp = 6;
  if (this->maxexp() != 0) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteUInt64ToArray(6, this->_internal_maxexp(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:Protocol.StatMetaData)
  return target;
}

size_t StatMetaData::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:Protocol.StatMetaData)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // uint64 hp = 1;
  if (this->hp() != 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::UInt64Size(
        this->_internal_hp());
  }

  // uint64 mp = 2;
  if (this->mp() != 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::UInt64Size(
        this->_internal_mp());
  }

  // uint64 exp = 3;
  if (this->exp() != 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::UInt64Size(
        this->_internal_exp());
  }

  // uint64 maxhp = 4;
  if (this->maxhp() != 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::UInt64Size(
        this->_internal_maxhp());
  }

  // uint64 maxmp = 5;
  if (this->maxmp() != 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::UInt64Size(
        this->_internal_maxmp());
  }

  // uint64 maxexp = 6;
  if (this->maxexp() != 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::UInt64Size(
        this->_internal_maxexp());
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void StatMetaData::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:Protocol.StatMetaData)
  GOOGLE_DCHECK_NE(&from, this);
  const StatMetaData* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<StatMetaData>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:Protocol.StatMetaData)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:Protocol.StatMetaData)
    MergeFrom(*source);
  }
}

void StatMetaData::MergeFrom(const StatMetaData& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:Protocol.StatMetaData)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.hp() != 0) {
    _internal_set_hp(from._internal_hp());
  }
  if (from.mp() != 0) {
    _internal_set_mp(from._internal_mp());
  }
  if (from.exp() != 0) {
    _internal_set_exp(from._internal_exp());
  }
  if (from.maxhp() != 0) {
    _internal_set_maxhp(from._internal_maxhp());
  }
  if (from.maxmp() != 0) {
    _internal_set_maxmp(from._internal_maxmp());
  }
  if (from.maxexp() != 0) {
    _internal_set_maxexp(from._internal_maxexp());
  }
}

void StatMetaData::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:Protocol.StatMetaData)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void StatMetaData::CopyFrom(const StatMetaData& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:Protocol.StatMetaData)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool StatMetaData::IsInitialized() const {
  return true;
}

void StatMetaData::InternalSwap(StatMetaData* other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::internal::memswap<
      PROTOBUF_FIELD_OFFSET(StatMetaData, maxexp_)
      + sizeof(StatMetaData::maxexp_)
      - PROTOBUF_FIELD_OFFSET(StatMetaData, hp_)>(
          reinterpret_cast<char*>(&hp_),
          reinterpret_cast<char*>(&other->hp_));
}

::PROTOBUF_NAMESPACE_ID::Metadata StatMetaData::GetMetadata() const {
  return ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(
      &descriptor_table_Struct_2eproto_getter, &descriptor_table_Struct_2eproto_once,
      file_level_metadata_Struct_2eproto[14]);
}

// @@protoc_insertion_point(namespace_scope)
}  // namespace Protocol
PROTOBUF_NAMESPACE_OPEN
template<> PROTOBUF_NOINLINE ::Protocol::ObjectInfo* Arena::CreateMaybeMessage< ::Protocol::ObjectInfo >(Arena* arena) {
  return Arena::CreateMessageInternal< ::Protocol::ObjectInfo >(arena);
}
template<> PROTOBUF_NOINLINE ::Protocol::PBVector* Arena::CreateMaybeMessage< ::Protocol::PBVector >(Arena* arena) {
  return Arena::CreateMessageInternal< ::Protocol::PBVector >(arena);
}
template<> PROTOBUF_NOINLINE ::Protocol::PBCharacterData* Arena::CreateMaybeMessage< ::Protocol::PBCharacterData >(Arena* arena) {
  return Arena::CreateMessageInternal< ::Protocol::PBCharacterData >(arena);
}
template<> PROTOBUF_NOINLINE ::Protocol::PBItemData* Arena::CreateMaybeMessage< ::Protocol::PBItemData >(Arena* arena) {
  return Arena::CreateMessageInternal< ::Protocol::PBItemData >(arena);
}
template<> PROTOBUF_NOINLINE ::Protocol::PBSkillData* Arena::CreateMaybeMessage< ::Protocol::PBSkillData >(Arena* arena) {
  return Arena::CreateMessageInternal< ::Protocol::PBSkillData >(arena);
}
template<> PROTOBUF_NOINLINE ::Protocol::CharacterMetaData* Arena::CreateMaybeMessage< ::Protocol::CharacterMetaData >(Arena* arena) {
  return Arena::CreateMessageInternal< ::Protocol::CharacterMetaData >(arena);
}
template<> PROTOBUF_NOINLINE ::Protocol::SkillMetaData* Arena::CreateMaybeMessage< ::Protocol::SkillMetaData >(Arena* arena) {
  return Arena::CreateMessageInternal< ::Protocol::SkillMetaData >(arena);
}
template<> PROTOBUF_NOINLINE ::Protocol::ProjectileInfo* Arena::CreateMaybeMessage< ::Protocol::ProjectileInfo >(Arena* arena) {
  return Arena::CreateMessageInternal< ::Protocol::ProjectileInfo >(arena);
}
template<> PROTOBUF_NOINLINE ::Protocol::ConsumMetaData* Arena::CreateMaybeMessage< ::Protocol::ConsumMetaData >(Arena* arena) {
  return Arena::CreateMessageInternal< ::Protocol::ConsumMetaData >(arena);
}
template<> PROTOBUF_NOINLINE ::Protocol::EquipMetaData* Arena::CreateMaybeMessage< ::Protocol::EquipMetaData >(Arena* arena) {
  return Arena::CreateMessageInternal< ::Protocol::EquipMetaData >(arena);
}
template<> PROTOBUF_NOINLINE ::Protocol::NPCMetaData* Arena::CreateMaybeMessage< ::Protocol::NPCMetaData >(Arena* arena) {
  return Arena::CreateMessageInternal< ::Protocol::NPCMetaData >(arena);
}
template<> PROTOBUF_NOINLINE ::Protocol::ProjectileMetaData* Arena::CreateMaybeMessage< ::Protocol::ProjectileMetaData >(Arena* arena) {
  return Arena::CreateMessageInternal< ::Protocol::ProjectileMetaData >(arena);
}
template<> PROTOBUF_NOINLINE ::Protocol::SummonsMetaData* Arena::CreateMaybeMessage< ::Protocol::SummonsMetaData >(Arena* arena) {
  return Arena::CreateMessageInternal< ::Protocol::SummonsMetaData >(arena);
}
template<> PROTOBUF_NOINLINE ::Protocol::EnemyMetaData* Arena::CreateMaybeMessage< ::Protocol::EnemyMetaData >(Arena* arena) {
  return Arena::CreateMessageInternal< ::Protocol::EnemyMetaData >(arena);
}
template<> PROTOBUF_NOINLINE ::Protocol::StatMetaData* Arena::CreateMaybeMessage< ::Protocol::StatMetaData >(Arena* arena) {
  return Arena::CreateMessageInternal< ::Protocol::StatMetaData >(arena);
}
PROTOBUF_NAMESPACE_CLOSE

// @@protoc_insertion_point(global_scope)
#include <google/protobuf/port_undef.inc>
